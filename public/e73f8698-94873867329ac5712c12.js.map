{"version":3,"file":"e73f8698-94873867329ac5712c12.js","mappings":"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","sources":["webpack://@landing/015-gatsby/./node_modules/@livekit/components-react/dist/index.mjs"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/components/controls/ClearPinButton.tsx\nimport * as React56 from \"react\";\n\n// src/hooks/useAudioPlayback.ts\nimport * as React10 from \"react\";\n\n// src/hooks/internal/useResizeObserver.ts\nimport * as React from \"react\";\nvar useLatest = (current) => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\nfunction useResizeObserver(target, callback) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = useLatest(callback);\n  React.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n    const targetEl = target.current;\n    if (!targetEl) return;\n    function cb(entry, observer) {\n      if (didUnsubscribe) return;\n      storedCallback.current(entry, observer);\n    }\n    resizeObserver == null ? void 0 : resizeObserver.subscribe(targetEl, cb);\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver == null ? void 0 : resizeObserver.unsubscribe(targetEl, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n  return resizeObserver == null ? void 0 : resizeObserver.observer;\n}\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries = [];\n  const callbacks = /* @__PURE__ */ new Map();\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  const observer = new ResizeObserver((entries, obs) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = /* @__PURE__ */ new Set();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target)) continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs == null ? void 0 : cbs.forEach((cb) => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n  return {\n    observer,\n    subscribe(target, callback) {\n      var _a;\n      observer.observe(target);\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target, callback) {\n      var _a;\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    }\n  };\n}\nvar _resizeObserver;\nvar getResizeObserver = () => !_resizeObserver ? _resizeObserver = createResizeObserver() : _resizeObserver;\nvar useSize = (target) => {\n  const [size, setSize] = React.useState({ width: 0, height: 0 });\n  React.useLayoutEffect(() => {\n    if (target.current) {\n      const { width, height } = target.current.getBoundingClientRect();\n      setSize({ width, height });\n    }\n  }, [target.current]);\n  const resizeCallback = React.useCallback(\n    (entry) => setSize(entry.contentRect),\n    []\n  );\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n\n// src/hooks/internal/useObservableState.ts\nimport * as React2 from \"react\";\nfunction useObservableState(observable, startWith, resetWhenObservableChanges = true) {\n  const [state, setState] = React2.useState(startWith);\n  React2.useEffect(() => {\n    if (resetWhenObservableChanges) {\n      setState(startWith);\n    }\n    if (typeof window === \"undefined\" || !observable) return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable, resetWhenObservableChanges]);\n  return state;\n}\n\n// src/hooks/internal/useMediaQuery.ts\nimport * as React3 from \"react\";\nfunction useMediaQuery(query) {\n  const getMatches = (query2) => {\n    if (typeof window !== \"undefined\") {\n      return window.matchMedia(query2).matches;\n    }\n    return false;\n  };\n  const [matches, setMatches] = React3.useState(getMatches(query));\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n  React3.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener(\"change\", handleChange);\n    }\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\n\n// src/hooks/useAudioPlayback.ts\nimport { roomAudioPlaybackAllowedObservable } from \"@livekit/components-core\";\n\n// src/context/layout-context.ts\nimport { PIN_DEFAULT_STATE, WIDGET_DEFAULT_STATE } from \"@livekit/components-core\";\nimport * as React4 from \"react\";\n\n// src/context/chat-context.ts\nfunction chatReducer(state, action) {\n  if (action.msg === \"show_chat\") {\n    return __spreadProps(__spreadValues({}, state), { showChat: true, unreadMessages: 0 });\n  } else if (action.msg === \"hide_chat\") {\n    return __spreadProps(__spreadValues({}, state), { showChat: false });\n  } else if (action.msg === \"toggle_chat\") {\n    const newState = __spreadProps(__spreadValues({}, state), { showChat: !state.showChat });\n    if (newState.showChat === true) {\n      newState.unreadMessages = 0;\n    }\n    return newState;\n  } else if (action.msg === \"unread_msg\") {\n    return __spreadProps(__spreadValues({}, state), { unreadMessages: action.count });\n  } else if (action.msg === \"toggle_settings\") {\n    return __spreadProps(__spreadValues({}, state), { showSettings: !state.showSettings });\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/pin-context.ts\nfunction pinReducer(state, action) {\n  if (action.msg === \"set_pin\") {\n    return [action.trackReference];\n  } else if (action.msg === \"clear_pin\") {\n    return [];\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/layout-context.ts\nvar LayoutContext = React4.createContext(void 0);\nfunction useLayoutContext() {\n  const layoutContext = React4.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useEnsureLayoutContext(layoutContext) {\n  const layout = useMaybeLayoutContext();\n  layoutContext != null ? layoutContext : layoutContext = layout;\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useCreateLayoutContext() {\n  const [pinState, pinDispatch] = React4.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React4.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState }\n  };\n}\nfunction useEnsureCreateLayoutContext(layoutContext) {\n  const [pinState, pinDispatch] = React4.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React4.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return layoutContext != null ? layoutContext : {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState }\n  };\n}\nfunction useMaybeLayoutContext() {\n  return React4.useContext(LayoutContext);\n}\n\n// src/context/participant-context.ts\nimport * as React6 from \"react\";\n\n// src/context/track-reference-context.ts\nimport * as React5 from \"react\";\nvar TrackRefContext = React5.createContext(\n  void 0\n);\nfunction useTrackRefContext() {\n  const trackReference = React5.useContext(TrackRefContext);\n  if (!trackReference) {\n    throw Error(\"tried to access track context outside of track context provider\");\n  }\n  return trackReference;\n}\nfunction useMaybeTrackRefContext() {\n  return React5.useContext(TrackRefContext);\n}\nfunction useEnsureTrackRef(trackRef) {\n  const context = useMaybeTrackRefContext();\n  const ref = trackRef != null ? trackRef : context;\n  if (!ref) {\n    throw new Error(\n      \"No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly\"\n    );\n  }\n  return ref;\n}\n\n// src/context/participant-context.ts\nvar ParticipantContext = React6.createContext(void 0);\nfunction useParticipantContext() {\n  const participant = React6.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error(\"tried to access participant context outside of participant context provider\");\n  }\n  return participant;\n}\nfunction useMaybeParticipantContext() {\n  return React6.useContext(ParticipantContext);\n}\nfunction useEnsureParticipant(participant) {\n  var _a;\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackRefContext();\n  const p = (_a = participant != null ? participant : context) != null ? _a : trackContext == null ? void 0 : trackContext.participant;\n  if (!p) {\n    throw new Error(\n      \"No participant provided, make sure you are inside a participant context or pass the participant explicitly\"\n    );\n  }\n  return p;\n}\n\n// src/context/room-context.ts\nimport * as React7 from \"react\";\nvar RoomContext = React7.createContext(void 0);\nfunction useRoomContext() {\n  const ctx = React7.useContext(RoomContext);\n  if (!ctx) {\n    throw Error(\"tried to access room context outside of livekit room component\");\n  }\n  return ctx;\n}\nfunction useMaybeRoomContext() {\n  return React7.useContext(RoomContext);\n}\nfunction useEnsureRoom(room) {\n  const context = useMaybeRoomContext();\n  const r = room != null ? room : context;\n  if (!r) {\n    throw new Error(\n      \"No room provided, make sure you are inside a Room context or pass the room explicitly\"\n    );\n  }\n  return r;\n}\n\n// src/context/feature-context.ts\nimport * as React8 from \"react\";\nvar LKFeatureContext = React8.createContext(void 0);\nfunction useFeatureContext(require2) {\n  const ctx = React8.useContext(LKFeatureContext);\n  if (require2 === true) {\n    if (ctx) {\n      return ctx;\n    } else {\n      throw Error(\"tried to access feature context, but none is present\");\n    }\n  }\n  return ctx;\n}\n\n// src/context/voice-assistant-context.ts\nimport * as React9 from \"react\";\nvar VoiceAssistantContext = React9.createContext(void 0);\n\n// src/hooks/useAudioPlayback.ts\nfunction useAudioPlayback(room) {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = React10.useCallback(() => __async(this, null, function* () {\n    yield roomEnsured.startAudio();\n  }), [roomEnsured]);\n  const observable = React10.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured]\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  return { canPlayAudio, startAudio };\n}\n\n// src/hooks/useClearPinButton.ts\nimport { setupClearPinButton } from \"@livekit/components-core\";\nimport * as React11 from \"react\";\n\n// src/mergeProps.ts\nimport clsx from \"clsx\";\nfunction chain(...callbacks) {\n  return (...args) => {\n    for (const callback of callbacks) {\n      if (typeof callback === \"function\") {\n        try {\n          callback(...args);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  };\n}\nfunction mergeProps(...args) {\n  const result = __spreadValues({}, args[0]);\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n      if (typeof a === \"function\" && typeof b === \"function\" && // This is a lot faster than a regex.\n      key[0] === \"o\" && key[1] === \"n\" && key.charCodeAt(2) >= /* 'A' */\n      65 && key.charCodeAt(2) <= /* 'Z' */\n      90) {\n        result[key] = chain(a, b);\n      } else if ((key === \"className\" || key === \"UNSAFE_className\") && typeof a === \"string\" && typeof b === \"string\") {\n        result[key] = clsx(a, b);\n      } else {\n        result[key] = b !== void 0 ? b : a;\n      }\n    }\n  }\n  return result;\n}\n\n// src/hooks/useClearPinButton.ts\nfunction useClearPinButton(props) {\n  const { state, dispatch } = useLayoutContext().pin;\n  const buttonProps = React11.useMemo(() => {\n    const { className } = setupClearPinButton();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !(state == null ? void 0 : state.length),\n      onClick: () => {\n        if (dispatch) dispatch({ msg: \"clear_pin\" });\n      }\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n  return { buttonProps };\n}\n\n// src/hooks/useConnectionQualityIndicator.ts\nimport { setupConnectionQualityIndicator } from \"@livekit/components-core\";\nimport { ConnectionQuality } from \"livekit-client\";\nimport * as React12 from \"react\";\nfunction useConnectionQualityIndicator(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const { className, connectionQualityObserver } = React12.useMemo(\n    () => setupConnectionQualityIndicator(p),\n    [p]\n  );\n  const quality = useObservableState(connectionQualityObserver, ConnectionQuality.Unknown);\n  return { className, quality };\n}\n\n// src/hooks/useConnectionStatus.ts\nimport { connectionStateObserver } from \"@livekit/components-core\";\nimport * as React13 from \"react\";\nfunction useConnectionState(room) {\n  const r = useEnsureRoom(room);\n  const observable = React13.useMemo(() => connectionStateObserver(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n\n// src/hooks/useDataChannel.ts\nimport { setupDataMessageHandler } from \"@livekit/components-core\";\nimport * as React14 from \"react\";\nfunction useDataChannel(topicOrCallback, callback) {\n  const onMessage = typeof topicOrCallback === \"function\" ? topicOrCallback : callback;\n  const topic = typeof topicOrCallback === \"string\" ? topicOrCallback : void 0;\n  const room = useRoomContext();\n  const { send, messageObservable, isSendingObservable } = React14.useMemo(\n    () => setupDataMessageHandler(room, topic, onMessage),\n    [room, topic, onMessage]\n  );\n  const message = useObservableState(messageObservable, void 0);\n  const isSending = useObservableState(isSendingObservable, false);\n  return {\n    message,\n    send,\n    isSending\n  };\n}\n\n// src/hooks/useDisconnectButton.ts\nimport { setupDisconnectButton } from \"@livekit/components-core\";\nimport { ConnectionState } from \"livekit-client\";\nimport * as React15 from \"react\";\nfunction useDisconnectButton(props) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const buttonProps = React15.useMemo(() => {\n    const { className, disconnect } = setupDisconnectButton(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => {\n        var _a;\n        return disconnect((_a = props.stopTracks) != null ? _a : true);\n      },\n      disabled: connectionState === ConnectionState.Disconnected\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n  return { buttonProps };\n}\n\n// src/hooks/useFacingMode.ts\nimport { LocalTrackPublication, facingModeFromLocalTrack } from \"livekit-client\";\nfunction useFacingMode(trackReference) {\n  if (trackReference.publication instanceof LocalTrackPublication) {\n    const localTrack = trackReference.publication.track;\n    if (localTrack) {\n      const { facingMode } = facingModeFromLocalTrack(localTrack);\n      return facingMode;\n    }\n  }\n  return \"undefined\";\n}\n\n// src/hooks/useFocusToggle.ts\nimport { setupFocusToggle, isTrackReferencePinned } from \"@livekit/components-core\";\nimport * as React16 from \"react\";\nfunction useFocusToggle({ trackRef, props }) {\n  const trackReference = useEnsureTrackRef(trackRef);\n  const layoutContext = useMaybeLayoutContext();\n  const { className } = React16.useMemo(() => setupFocusToggle(), []);\n  const inFocus = React16.useMemo(() => {\n    return isTrackReferencePinned(trackReference, layoutContext == null ? void 0 : layoutContext.pin.state);\n  }, [trackReference, layoutContext == null ? void 0 : layoutContext.pin.state]);\n  const mergedProps = React16.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: (event) => {\n        var _a, _b, _c, _d, _e;\n        (_a = props.onClick) == null ? void 0 : _a.call(props, event);\n        if (inFocus) {\n          (_c = layoutContext == null ? void 0 : (_b = layoutContext.pin).dispatch) == null ? void 0 : _c.call(_b, {\n            msg: \"clear_pin\"\n          });\n        } else {\n          (_e = layoutContext == null ? void 0 : (_d = layoutContext.pin).dispatch) == null ? void 0 : _e.call(_d, {\n            msg: \"set_pin\",\n            trackReference\n          });\n        }\n      }\n    }),\n    [props, className, trackReference, inFocus, layoutContext == null ? void 0 : layoutContext.pin]\n  );\n  return { mergedProps, inFocus };\n}\n\n// src/hooks/useGridLayout.ts\nimport { GRID_LAYOUTS, selectGridLayout } from \"@livekit/components-core\";\nimport * as React17 from \"react\";\nfunction useGridLayout(gridElement, trackCount, options = {}) {\n  var _a;\n  const gridLayouts = (_a = options.gridLayouts) != null ? _a : GRID_LAYOUTS;\n  const { width, height } = useSize(gridElement);\n  const layout = selectGridLayout(gridLayouts, trackCount, width, height);\n  React17.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty(\"--lk-col-count\", layout == null ? void 0 : layout.columns.toString());\n      gridElement.current.style.setProperty(\"--lk-row-count\", layout == null ? void 0 : layout.rows.toString());\n    }\n  }, [gridElement, layout]);\n  return {\n    layout,\n    containerWidth: width,\n    containerHeight: height\n  };\n}\n\n// src/hooks/useIsMuted.ts\nimport {\n  getTrackReferenceId,\n  mutedObserver\n} from \"@livekit/components-core\";\nimport * as React18 from \"react\";\nfunction useIsMuted(sourceOrTrackRef, options = {}) {\n  var _a, _b;\n  const passedParticipant = typeof sourceOrTrackRef === \"string\" ? options.participant : sourceOrTrackRef.participant;\n  const p = useEnsureParticipant(passedParticipant);\n  const ref = typeof sourceOrTrackRef === \"string\" ? { participant: p, source: sourceOrTrackRef } : sourceOrTrackRef;\n  const [isMuted, setIsMuted] = React18.useState(\n    !!(((_a = ref.publication) == null ? void 0 : _a.isMuted) || ((_b = p.getTrackPublication(ref.source)) == null ? void 0 : _b.isMuted))\n  );\n  React18.useEffect(() => {\n    const listener = mutedObserver(ref).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [getTrackReferenceId(ref)]);\n  return isMuted;\n}\n\n// src/hooks/useIsSpeaking.ts\nimport { createIsSpeakingObserver } from \"@livekit/components-core\";\nimport * as React19 from \"react\";\nfunction useIsSpeaking(participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = React19.useMemo(() => createIsSpeakingObserver(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n  return isSpeaking;\n}\n\n// src/hooks/useLiveKitRoom.ts\nimport { log, setupLiveKitRoom } from \"@livekit/components-core\";\nimport { Room, MediaDeviceFailure, RoomEvent, ConnectionState as ConnectionState2 } from \"livekit-client\";\nimport * as React20 from \"react\";\nvar defaultRoomProps = {\n  connect: true,\n  audio: false,\n  video: false\n};\nfunction useLiveKitRoom(props) {\n  const _a = __spreadValues(__spreadValues({}, defaultRoomProps), props), {\n    token,\n    serverUrl,\n    options,\n    room: passedRoom,\n    connectOptions,\n    connect,\n    audio,\n    video,\n    screen,\n    onConnected,\n    onDisconnected,\n    onError,\n    onMediaDeviceFailure,\n    onEncryptionError,\n    simulateParticipants\n  } = _a, rest = __objRest(_a, [\n    \"token\",\n    \"serverUrl\",\n    \"options\",\n    \"room\",\n    \"connectOptions\",\n    \"connect\",\n    \"audio\",\n    \"video\",\n    \"screen\",\n    \"onConnected\",\n    \"onDisconnected\",\n    \"onError\",\n    \"onMediaDeviceFailure\",\n    \"onEncryptionError\",\n    \"simulateParticipants\"\n  ]);\n  if (options && passedRoom) {\n    log.warn(\n      \"when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.\"\n    );\n  }\n  const [room, setRoom] = React20.useState();\n  React20.useEffect(() => {\n    setRoom(passedRoom != null ? passedRoom : new Room(options));\n  }, [passedRoom]);\n  const htmlProps = React20.useMemo(() => {\n    const { className } = setupLiveKitRoom();\n    return mergeProps(rest, { className });\n  }, [rest]);\n  React20.useEffect(() => {\n    if (!room) return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n      log.debug(\"trying to publish local tracks\");\n      Promise.all([\n        localP.setMicrophoneEnabled(!!audio, typeof audio !== \"boolean\" ? audio : void 0),\n        localP.setCameraEnabled(!!video, typeof video !== \"boolean\" ? video : void 0),\n        localP.setScreenShareEnabled(!!screen, typeof screen !== \"boolean\" ? screen : void 0)\n      ]).catch((e) => {\n        log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    };\n    const handleMediaDeviceError = (e) => {\n      const mediaDeviceFailure = MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure == null ? void 0 : onMediaDeviceFailure(mediaDeviceFailure);\n    };\n    const handleEncryptionError = (e) => {\n      onEncryptionError == null ? void 0 : onEncryptionError(e);\n    };\n    room.on(RoomEvent.SignalConnected, onSignalConnected).on(RoomEvent.MediaDevicesError, handleMediaDeviceError).on(RoomEvent.EncryptionError, handleEncryptionError);\n    return () => {\n      room.off(RoomEvent.SignalConnected, onSignalConnected).off(RoomEvent.MediaDevicesError, handleMediaDeviceError).off(RoomEvent.EncryptionError, handleEncryptionError);\n    };\n  }, [room, audio, video, screen, onError, onEncryptionError, onMediaDeviceFailure]);\n  React20.useEffect(() => {\n    if (!room) return;\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true\n        }\n      });\n      return;\n    }\n    if (!token) {\n      log.debug(\"no token yet\");\n      return;\n    }\n    if (!serverUrl) {\n      log.warn(\"no livekit url provided\");\n      onError == null ? void 0 : onError(Error(\"no livekit url provided\"));\n      return;\n    }\n    if (connect) {\n      log.debug(\"connecting\");\n      room.connect(serverUrl, token, connectOptions).catch((e) => {\n        log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    } else {\n      log.debug(\"disconnecting because connect is false\");\n      room.disconnect();\n    }\n  }, [\n    connect,\n    token,\n    JSON.stringify(connectOptions),\n    room,\n    onError,\n    serverUrl,\n    simulateParticipants\n  ]);\n  React20.useEffect(() => {\n    if (!room) return;\n    const connectionStateChangeListener = (state) => {\n      switch (state) {\n        case ConnectionState2.Disconnected:\n          if (onDisconnected) onDisconnected();\n          break;\n        case ConnectionState2.Connected:\n          if (onConnected) onConnected();\n          break;\n        default:\n          break;\n      }\n    };\n    room.on(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n  React20.useEffect(() => {\n    if (!room) return;\n    return () => {\n      log.info(\"disconnecting on onmount\");\n      room.disconnect();\n    };\n  }, [room]);\n  return { room, htmlProps };\n}\n\n// src/hooks/useLocalParticipant.ts\nimport { observeParticipantMedia } from \"@livekit/components-core\";\nimport * as React21 from \"react\";\nfunction useLocalParticipant(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = React21.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = React21.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [isCameraEnabled, setIsCameraEnabled] = React21.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [lastMicrophoneError, setLastMicrophoneError] = React21.useState(\n    localParticipant.lastMicrophoneError\n  );\n  const [lastCameraError, setLastCameraError] = React21.useState(localParticipant.lastCameraError);\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React21.useState(\n    localParticipant.isMicrophoneEnabled\n  );\n  const [microphoneTrack, setMicrophoneTrack] = React21.useState(\n    void 0\n  );\n  const [cameraTrack, setCameraTrack] = React21.useState(void 0);\n  const handleUpdate = (media) => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLastMicrophoneError(media.participant.lastMicrophoneError);\n    setLastCameraError(media.participant.lastCameraError);\n    setLocalParticipant(media.participant);\n  };\n  React21.useEffect(() => {\n    const listener = observeParticipantMedia(room.localParticipant).subscribe(handleUpdate);\n    return () => listener.unsubscribe();\n  }, [room]);\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    lastMicrophoneError,\n    lastCameraError,\n    localParticipant\n  };\n}\n\n// src/hooks/useLocalParticipantPermissions.ts\nimport { participantPermissionObserver } from \"@livekit/components-core\";\nimport * as React22 from \"react\";\nfunction useLocalParticipantPermissions() {\n  const room = useRoomContext();\n  const permissionObserver = React22.useMemo(\n    () => participantPermissionObserver(room.localParticipant),\n    [room]\n  );\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n\n// src/hooks/useMediaDeviceSelect.ts\nimport { createMediaDeviceObserver, setupDeviceSelector, log as log2 } from \"@livekit/components-core\";\nimport * as React23 from \"react\";\nfunction useMediaDeviceSelect({\n  kind,\n  room,\n  track,\n  requestPermissions,\n  onError\n}) {\n  const roomContext = useMaybeRoomContext();\n  const deviceObserver = React23.useMemo(\n    () => createMediaDeviceObserver(kind, onError, requestPermissions),\n    [kind, requestPermissions, onError]\n  );\n  const devices = useObservableState(deviceObserver, []);\n  const [currentDeviceId, setCurrentDeviceId] = React23.useState(\"\");\n  const { className, activeDeviceObservable, setActiveMediaDevice } = React23.useMemo(\n    () => setupDeviceSelector(kind, room != null ? room : roomContext, track),\n    [kind, room, roomContext, track]\n  );\n  React23.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe((deviceId) => {\n      log2.info(\"setCurrentDeviceId\", deviceId);\n      if (deviceId) setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener == null ? void 0 : listener.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n  return { devices, className, activeDeviceId: currentDeviceId, setActiveMediaDevice };\n}\n\n// src/hooks/useMediaDevices.ts\nimport * as React24 from \"react\";\nimport { createMediaDeviceObserver as createMediaDeviceObserver2 } from \"@livekit/components-core\";\nfunction useMediaDevices({\n  kind,\n  onError\n}) {\n  const deviceObserver = React24.useMemo(\n    () => createMediaDeviceObserver2(kind, onError),\n    [kind, onError]\n  );\n  const devices = useObservableState(deviceObserver, []);\n  return devices;\n}\n\n// src/hooks/usePagination.ts\nimport * as React26 from \"react\";\n\n// src/hooks/useVisualStableUpdate.ts\nimport { log as log3, sortTrackReferences, updatePages } from \"@livekit/components-core\";\nimport * as React25 from \"react\";\nfunction useVisualStableUpdate(trackReferences, maxItemsOnPage, options = {}) {\n  const lastTrackRefs = React25.useRef([]);\n  const lastMaxItemsOnPage = React25.useRef(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n  const sortedTrackRefs = typeof options.customSortFunction === \"function\" ? options.customSortFunction(trackReferences) : sortTrackReferences(trackReferences);\n  let updatedTrackRefs = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = updatePages(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      log3.error(\"Error while running updatePages(): \", error);\n    }\n  }\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n  return updatedTrackRefs;\n}\n\n// src/hooks/usePagination.ts\nfunction usePagination(itemPerPage, trackReferences) {\n  const [currentPage, setCurrentPage] = React26.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n  const changePage = (direction) => {\n    setCurrentPage((state) => {\n      if (direction === \"next\") {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const goToPage = (num) => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n  const tracksOnPage = updatedTrackReferences.slice(firstItemIndex, lastItemIndex);\n  return {\n    totalPageCount,\n    nextPage: () => changePage(\"next\"),\n    prevPage: () => changePage(\"previous\"),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: tracksOnPage,\n    currentPage\n  };\n}\n\n// src/hooks/useParticipantInfo.ts\nimport { participantInfoObserver } from \"@livekit/components-core\";\nimport * as React27 from \"react\";\nfunction useParticipantInfo(props = {}) {\n  let p = useMaybeParticipantContext();\n  if (props.participant) {\n    p = props.participant;\n  }\n  const infoObserver = React27.useMemo(() => participantInfoObserver(p), [p]);\n  const { identity, name, metadata } = useObservableState(infoObserver, {\n    name: p == null ? void 0 : p.name,\n    identity: p == null ? void 0 : p.identity,\n    metadata: p == null ? void 0 : p.metadata\n  });\n  return { identity, name, metadata };\n}\n\n// src/hooks/useParticipantPermissions.ts\nimport { participantPermissionObserver as participantPermissionObserver2 } from \"@livekit/components-core\";\nimport * as React28 from \"react\";\nfunction useParticipantPermissions(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = React28.useMemo(() => participantPermissionObserver2(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n\n// src/hooks/useParticipantTile.ts\nimport { setupParticipantTile } from \"@livekit/components-core\";\nimport * as React29 from \"react\";\nimport { Track } from \"livekit-client\";\nfunction useParticipantTile({\n  trackRef,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps\n}) {\n  const trackReference = useEnsureTrackRef(trackRef);\n  const mergedProps = React29.useMemo(() => {\n    const { className } = setupParticipantTile();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: (event) => {\n        var _a, _b;\n        (_a = htmlProps.onClick) == null ? void 0 : _a.call(htmlProps, event);\n        if (typeof onParticipantClick === \"function\") {\n          const track = (_b = trackReference.publication) != null ? _b : trackReference.participant.getTrackPublication(trackReference.source);\n          onParticipantClick({ participant: trackReference.participant, track });\n        }\n      }\n    });\n  }, [\n    htmlProps,\n    onParticipantClick,\n    trackReference.publication,\n    trackReference.source,\n    trackReference.participant\n  ]);\n  const micTrack = trackReference.participant.getTrackPublication(Track.Source.Microphone);\n  const micRef = React29.useMemo(() => {\n    return {\n      participant: trackReference.participant,\n      source: Track.Source.Microphone,\n      publication: micTrack\n    };\n  }, [micTrack, trackReference.participant]);\n  const isVideoMuted = useIsMuted(trackReference);\n  const isAudioMuted = useIsMuted(micRef);\n  const isSpeaking = useIsSpeaking(trackReference.participant);\n  const facingMode = useFacingMode(trackReference);\n  return {\n    elementProps: __spreadValues({\n      \"data-lk-audio-muted\": isAudioMuted,\n      \"data-lk-video-muted\": isVideoMuted,\n      \"data-lk-speaking\": disableSpeakingIndicator === true ? false : isSpeaking,\n      \"data-lk-local-participant\": trackReference.participant.isLocal,\n      \"data-lk-source\": trackReference.source,\n      \"data-lk-facing-mode\": facingMode\n    }, mergedProps)\n  };\n}\n\n// src/hooks/useRemoteParticipants.ts\nimport { connectedParticipantsObserver } from \"@livekit/components-core\";\nimport * as React30 from \"react\";\nfunction useRemoteParticipants(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = React30.useState([]);\n  React30.useEffect(() => {\n    const listener = connectedParticipantsObserver(room, {\n      additionalRoomEvents: options.updateOnlyOn\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n}\n\n// src/hooks/useParticipants.ts\nimport * as React31 from \"react\";\nfunction useParticipants(options = {}) {\n  const remoteParticipants = useRemoteParticipants(options);\n  const { localParticipant } = useLocalParticipant(options);\n  return React31.useMemo(\n    () => [localParticipant, ...remoteParticipants],\n    [localParticipant, remoteParticipants]\n  );\n}\n\n// src/hooks/usePinnedTracks.ts\nimport * as React32 from \"react\";\nfunction usePinnedTracks(layoutContext) {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return React32.useMemo(() => {\n    if ((layoutContext == null ? void 0 : layoutContext.pin.state) !== void 0 && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n\n// src/hooks/useRemoteParticipant.ts\nimport {\n  connectedParticipantObserver,\n  participantByIdentifierObserver\n} from \"@livekit/components-core\";\nimport * as React33 from \"react\";\nfunction useRemoteParticipant(identityOrIdentifier, options = {}) {\n  const room = useRoomContext();\n  const [updateOnlyOn] = React33.useState(options.updateOnlyOn);\n  const observable = React33.useMemo(() => {\n    if (typeof identityOrIdentifier === \"string\") {\n      return connectedParticipantObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn\n      });\n    } else {\n      return participantByIdentifierObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn\n      });\n    }\n  }, [room, JSON.stringify(identityOrIdentifier), updateOnlyOn]);\n  const [participantWrapper, setParticipantWrapper] = React33.useState({\n    p: void 0\n  });\n  React33.useEffect(() => {\n    const listener = observable.subscribe((p) => setParticipantWrapper({ p }));\n    return () => listener.unsubscribe();\n  }, [observable]);\n  return participantWrapper.p;\n}\n\n// src/hooks/useRoomInfo.ts\nimport { roomInfoObserver } from \"@livekit/components-core\";\nimport * as React34 from \"react\";\nfunction useRoomInfo(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = React34.useMemo(() => roomInfoObserver(room), [room]);\n  const { name, metadata } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata\n  });\n  return { name, metadata };\n}\n\n// src/hooks/useSortedParticipants.ts\nimport { sortParticipants } from \"@livekit/components-core\";\nimport * as React36 from \"react\";\n\n// src/hooks/useSpeakingParticipants.ts\nimport { activeSpeakerObserver } from \"@livekit/components-core\";\nimport * as React35 from \"react\";\nfunction useSpeakingParticipants() {\n  const room = useRoomContext();\n  const speakerObserver = React35.useMemo(() => activeSpeakerObserver(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n}\n\n// src/hooks/useSortedParticipants.ts\nfunction useSortedParticipants(participants) {\n  const [sortedParticipants, setSortedParticipants] = React36.useState(\n    sortParticipants(participants)\n  );\n  const activeSpeakers = useSpeakingParticipants();\n  React36.useEffect(() => {\n    setSortedParticipants(sortParticipants(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n\n// src/hooks/useStartAudio.ts\nimport { setupStartAudio } from \"@livekit/components-core\";\nimport * as React37 from \"react\";\nfunction useStartAudio({ room, props }) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomAudioPlaybackAllowedObservable: roomAudioPlaybackAllowedObservable2, handleStartAudioPlayback } = React37.useMemo(\n    () => setupStartAudio(),\n    []\n  );\n  const observable = React37.useMemo(\n    () => roomAudioPlaybackAllowedObservable2(roomEnsured),\n    [roomEnsured, roomAudioPlaybackAllowedObservable2]\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  const mergedProps = React37.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: () => {\n        handleStartAudioPlayback(roomEnsured);\n      },\n      style: { display: canPlayAudio ? \"none\" : \"block\" }\n    }),\n    [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured]\n  );\n  return { mergedProps, canPlayAudio };\n}\n\n// src/hooks/useStartVideo.ts\nimport { setupStartVideo } from \"@livekit/components-core\";\nimport * as React38 from \"react\";\nfunction useStartVideo({ room, props }) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback } = React38.useMemo(\n    () => setupStartVideo(),\n    []\n  );\n  const observable = React38.useMemo(\n    () => roomVideoPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomVideoPlaybackAllowedObservable]\n  );\n  const { canPlayVideo } = useObservableState(observable, {\n    canPlayVideo: roomEnsured.canPlaybackVideo\n  });\n  const mergedProps = React38.useMemo(\n    () => mergeProps(props, {\n      className,\n      onClick: () => {\n        handleStartVideoPlayback(roomEnsured);\n      },\n      style: { display: canPlayVideo ? \"none\" : \"block\" }\n    }),\n    [props, className, canPlayVideo, handleStartVideoPlayback, roomEnsured]\n  );\n  return { mergedProps, canPlayVideo };\n}\n\n// src/hooks/useSwipe.ts\nimport * as React39 from \"react\";\nfunction useSwipe(element, options = {}) {\n  var _a;\n  const touchStart = React39.useRef(null);\n  const touchEnd = React39.useRef(null);\n  const minSwipeDistance = (_a = options.minSwipeDistance) != null ? _a : 50;\n  const onTouchStart = (event) => {\n    touchEnd.current = null;\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n  const onTouchMove = (event) => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n  const onTouchEnd = React39.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n    if (isLeftSwipe && options.onLeftSwipe) options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe) options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n  React39.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener(\"touchstart\", onTouchStart, { passive: true });\n      elementCopy.addEventListener(\"touchmove\", onTouchMove, { passive: true });\n      elementCopy.addEventListener(\"touchend\", onTouchEnd, { passive: true });\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener(\"touchstart\", onTouchStart);\n        elementCopy.removeEventListener(\"touchmove\", onTouchMove);\n        elementCopy.removeEventListener(\"touchend\", onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n\n// src/hooks/useChatToggle.ts\nimport { setupChatToggle } from \"@livekit/components-core\";\nimport * as React40 from \"react\";\nfunction useChatToggle({ props }) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const { className } = React40.useMemo(() => setupChatToggle(), []);\n  const mergedProps = React40.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: \"toggle_chat\" });\n      },\n      \"aria-pressed\": (state == null ? void 0 : state.showChat) ? \"true\" : \"false\",\n      \"data-lk-unread-msgs\": state ? state.unreadMessages < 10 ? state.unreadMessages.toFixed(0) : \"9+\" : \"0\"\n    });\n  }, [props, className, dispatch, state]);\n  return { mergedProps };\n}\n\n// src/hooks/useToken.ts\nimport { log as log4 } from \"@livekit/components-core\";\nimport * as React41 from \"react\";\nfunction useToken(tokenEndpoint, roomName, options = {}) {\n  const [token, setToken] = React41.useState(void 0);\n  React41.useEffect(() => {\n    var _a;\n    if (tokenEndpoint === void 0) {\n      throw Error(\"token endpoint needs to be defined\");\n    }\n    if (((_a = options.userInfo) == null ? void 0 : _a.identity) === void 0) {\n      return;\n    }\n    const tokenFetcher = () => __async(this, null, function* () {\n      log4.debug(\"fetching token\");\n      const params = new URLSearchParams(__spreadProps(__spreadValues({}, options.userInfo), { roomName }));\n      const res = yield fetch(`${tokenEndpoint}?${params.toString()}`);\n      if (!res.ok) {\n        log4.error(\n          `Could not fetch token. Server responded with status ${res.status}: ${res.statusText}`\n        );\n        return;\n      }\n      const { accessToken } = yield res.json();\n      setToken(accessToken);\n    });\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, JSON.stringify(options)]);\n  return token;\n}\n\n// src/hooks/useTrackMutedIndicator.ts\nimport {\n  setupTrackMutedIndicator,\n  getTrackReferenceId as getTrackReferenceId2\n} from \"@livekit/components-core\";\nimport * as React42 from \"react\";\nfunction useTrackMutedIndicator(trackRef) {\n  var _a, _b;\n  const trackReference = useEnsureTrackRef(trackRef);\n  const { className, mediaMutedObserver } = React42.useMemo(\n    () => setupTrackMutedIndicator(trackReference),\n    [getTrackReferenceId2(trackReference)]\n  );\n  const isMuted = useObservableState(\n    mediaMutedObserver,\n    !!(((_a = trackReference.publication) == null ? void 0 : _a.isMuted) || ((_b = trackReference.participant.getTrackPublication(trackReference.source)) == null ? void 0 : _b.isMuted))\n  );\n  return { isMuted, className };\n}\n\n// src/hooks/useTrackToggle.ts\nimport { setupMediaToggle, setupManualToggle, log as log5 } from \"@livekit/components-core\";\nimport * as React43 from \"react\";\nfunction useTrackToggle(_a) {\n  var _b = _a, {\n    source,\n    onChange,\n    initialState,\n    captureOptions,\n    publishOptions,\n    onDeviceError\n  } = _b, rest = __objRest(_b, [\n    \"source\",\n    \"onChange\",\n    \"initialState\",\n    \"captureOptions\",\n    \"publishOptions\",\n    \"onDeviceError\"\n  ]);\n  var _a2;\n  const room = useMaybeRoomContext();\n  const track = (_a2 = room == null ? void 0 : room.localParticipant) == null ? void 0 : _a2.getTrackPublication(source);\n  const userInteractionRef = React43.useRef(false);\n  const { toggle, className, pendingObserver, enabledObserver } = React43.useMemo(\n    () => room ? setupMediaToggle(source, room, captureOptions, publishOptions, onDeviceError) : setupManualToggle(),\n    [room, source, JSON.stringify(captureOptions), publishOptions]\n  );\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState != null ? initialState : !!(track == null ? void 0 : track.isEnabled));\n  React43.useEffect(() => {\n    onChange == null ? void 0 : onChange(enabled, userInteractionRef.current);\n    userInteractionRef.current = false;\n  }, [enabled, onChange]);\n  React43.useEffect(() => {\n    if (initialState !== void 0) {\n      log5.debug(\"forcing initial toggle state\", source, initialState);\n      toggle(initialState);\n    }\n  }, []);\n  const newProps = React43.useMemo(() => mergeProps(rest, { className }), [rest, className]);\n  const clickHandler = React43.useCallback(\n    (evt) => {\n      var _a3;\n      userInteractionRef.current = true;\n      toggle().catch(() => userInteractionRef.current = false);\n      (_a3 = rest.onClick) == null ? void 0 : _a3.call(rest, evt);\n    },\n    [rest, toggle]\n  );\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: __spreadProps(__spreadValues({}, newProps), {\n      \"aria-pressed\": enabled,\n      \"data-lk-source\": source,\n      \"data-lk-enabled\": enabled,\n      disabled: pending,\n      onClick: clickHandler\n    })\n  };\n}\n\n// src/hooks/useTracks.ts\nimport {\n  isSourcesWithOptions,\n  isSourceWitOptions,\n  log as log6,\n  trackReferencesObservable\n} from \"@livekit/components-core\";\nimport { Track as Track2 } from \"livekit-client\";\nimport * as React44 from \"react\";\nfunction useTracks(sources = [\n  Track2.Source.Camera,\n  Track2.Source.Microphone,\n  Track2.Source.ScreenShare,\n  Track2.Source.ScreenShareAudio,\n  Track2.Source.Unknown\n], options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = React44.useState([]);\n  const [participants, setParticipants] = React44.useState([]);\n  const sources_ = React44.useMemo(() => {\n    return sources.map((s) => isSourceWitOptions(s) ? s.source : s);\n  }, [JSON.stringify(sources)]);\n  React44.useEffect(() => {\n    const subscription = trackReferencesObservable(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed\n    }).subscribe(({ trackReferences: trackReferences2, participants: participants2 }) => {\n      log6.debug(\"setting track bundles\", trackReferences2, participants2);\n      setTrackReferences(trackReferences2);\n      setParticipants(participants2);\n    });\n    return () => subscription.unsubscribe();\n  }, [\n    room,\n    JSON.stringify(options.onlySubscribed),\n    JSON.stringify(options.updateOnlyOn),\n    JSON.stringify(sources)\n  ]);\n  const maybeTrackReferences = React44.useMemo(() => {\n    if (isSourcesWithOptions(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders = Array.from(trackReferences);\n      participants.forEach((participant) => {\n        var _a;\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = (_a = requirePlaceholder.get(participant.identity)) != null ? _a : [];\n          sourcesToAddPlaceholder.forEach((placeholderSource) => {\n            if (trackReferences.find(\n              ({ participant: p, publication }) => participant.identity === p.identity && publication.source === placeholderSource\n            )) {\n              return;\n            }\n            log6.debug(\n              `Add ${placeholderSource} placeholder for participant ${participant.identity}.`\n            );\n            const placeholder = {\n              participant,\n              source: placeholderSource\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n  return maybeTrackReferences;\n}\nfunction difference(setA, setB) {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\nfunction requiredPlaceholders(sources, participants) {\n  const placeholderMap = /* @__PURE__ */ new Map();\n  if (isSourcesWithOptions(sources)) {\n    const sourcesThatNeedPlaceholder = sources.filter((sourceWithOption) => sourceWithOption.withPlaceholder).map((sourceWithOption) => sourceWithOption.source);\n    participants.forEach((participant) => {\n      const sourcesOfSubscribedTracks = participant.getTrackPublications().map((pub) => {\n        var _a;\n        return (_a = pub.track) == null ? void 0 : _a.source;\n      }).filter((trackSource) => trackSource !== void 0);\n      const placeholderNeededForThisParticipant = Array.from(\n        difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks))\n      );\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n\n// src/hooks/useTrackRefBySourceOrName.ts\nimport { setupMediaTrack, getTrackByIdentifier } from \"@livekit/components-core\";\nimport * as React45 from \"react\";\nimport { Track as Track3 } from \"livekit-client\";\nfunction useTrackRefBySourceOrName(source) {\n  var _a, _b;\n  const [publication, setPublication] = React45.useState(getTrackByIdentifier(source));\n  const { trackObserver } = React45.useMemo(() => {\n    return setupMediaTrack(source);\n  }, [(_a = source.participant.sid) != null ? _a : source.participant.identity, source.source]);\n  React45.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication2) => {\n      setPublication(publication2);\n    });\n    return () => subscription == null ? void 0 : subscription.unsubscribe();\n  }, [trackObserver]);\n  return {\n    participant: source.participant,\n    source: (_b = source.source) != null ? _b : Track3.Source.Unknown,\n    publication\n  };\n}\n\n// src/hooks/useTrackByName.ts\nfunction useTrackByName(name, participant) {\n  const p = useEnsureParticipant(participant);\n  return useTrackRefBySourceOrName({ name, participant: p });\n}\n\n// src/hooks/useChat.ts\nimport * as React46 from \"react\";\nimport { setupChat } from \"@livekit/components-core\";\nimport { ConnectionState as ConnectionState3 } from \"livekit-client\";\nfunction useChat(options) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const isDisconnected = React46.useMemo(\n    () => connectionState === ConnectionState3.Disconnected,\n    [connectionState]\n  );\n  const setup = React46.useMemo(\n    () => setupChat(room, options),\n    [room, options, isDisconnected]\n  );\n  const isSending = useObservableState(setup.isSendingObservable, false);\n  const chatMessages = useObservableState(setup.messageObservable, []);\n  return { send: setup.send, update: setup.update, chatMessages, isSending };\n}\n\n// src/hooks/usePersistentUserChoices.ts\nimport { loadUserChoices, saveUserChoices } from \"@livekit/components-core\";\nimport * as React47 from \"react\";\nfunction usePersistentUserChoices(options = {}) {\n  var _a;\n  const [userChoices, setSettings] = React47.useState(\n    loadUserChoices(options.defaults, (_a = options.preventLoad) != null ? _a : false)\n  );\n  const saveAudioInputEnabled = React47.useCallback((isEnabled) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { audioEnabled: isEnabled }));\n  }, []);\n  const saveVideoInputEnabled = React47.useCallback((isEnabled) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { videoEnabled: isEnabled }));\n  }, []);\n  const saveAudioInputDeviceId = React47.useCallback((deviceId) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { audioDeviceId: deviceId }));\n  }, []);\n  const saveVideoInputDeviceId = React47.useCallback((deviceId) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { videoDeviceId: deviceId }));\n  }, []);\n  const saveUsername = React47.useCallback((username) => {\n    setSettings((prev) => __spreadProps(__spreadValues({}, prev), { username }));\n  }, []);\n  React47.useEffect(() => {\n    var _a2;\n    saveUserChoices(userChoices, (_a2 = options.preventSave) != null ? _a2 : false);\n  }, [userChoices, options.preventSave]);\n  return {\n    userChoices,\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n    saveUsername\n  };\n}\n\n// src/hooks/useIsEncrypted.ts\nimport * as React48 from \"react\";\nimport { LocalParticipant } from \"livekit-client\";\nimport { encryptionStatusObservable } from \"@livekit/components-core\";\nfunction useIsEncrypted(participant, options = {}) {\n  const p = useEnsureParticipant(participant);\n  const room = useEnsureRoom(options.room);\n  const observer = React48.useMemo(() => encryptionStatusObservable(room, p), [room, p]);\n  const isEncrypted = useObservableState(\n    observer,\n    p instanceof LocalParticipant ? p.isE2EEEnabled : !!(p == null ? void 0 : p.isEncrypted)\n  );\n  return isEncrypted;\n}\n\n// src/hooks/useTrackVolume.ts\nimport * as React49 from \"react\";\nimport { Track as Track4, createAudioAnalyser } from \"livekit-client\";\nimport {\n  isTrackReference\n} from \"@livekit/components-core\";\nfunction useTrackVolume(trackOrTrackReference, options = { fftSize: 32, smoothingTimeConstant: 0 }) {\n  const track = isTrackReference(trackOrTrackReference) ? trackOrTrackReference.publication.track : trackOrTrackReference;\n  const [volume, setVolume] = React49.useState(0);\n  React49.useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n    const { cleanup, analyser } = createAudioAnalyser(track, options);\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const updateVolume = () => {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const a = dataArray[i];\n        sum += a * a;\n      }\n      setVolume(Math.sqrt(sum / dataArray.length) / 255);\n    };\n    const interval = setInterval(updateVolume, 1e3 / 30);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track == null ? void 0 : track.mediaStream, JSON.stringify(options)]);\n  return volume;\n}\nvar normalizeFrequencies = (frequencies) => {\n  const normalizeDb = (value) => {\n    const minDb = -100;\n    const maxDb = -10;\n    let db = 1 - Math.max(minDb, Math.min(maxDb, value)) * -1 / 100;\n    db = Math.sqrt(db);\n    return db;\n  };\n  return frequencies.map((value) => {\n    if (value === -Infinity) {\n      return 0;\n    }\n    return normalizeDb(value);\n  });\n};\nvar multibandDefaults = {\n  bands: 5,\n  loPass: 100,\n  hiPass: 600,\n  updateInterval: 32,\n  analyserOptions: { fftSize: 2048 }\n};\nfunction useMultibandTrackVolume(trackOrTrackReference, options = {}) {\n  var _a;\n  const track = trackOrTrackReference instanceof Track4 ? trackOrTrackReference : (_a = trackOrTrackReference == null ? void 0 : trackOrTrackReference.publication) == null ? void 0 : _a.track;\n  const opts = __spreadValues(__spreadValues({}, multibandDefaults), options);\n  const [frequencyBands, setFrequencyBands] = React49.useState(\n    new Array(opts.bands).fill(0)\n  );\n  React49.useEffect(() => {\n    if (!track || !(track == null ? void 0 : track.mediaStream)) {\n      return;\n    }\n    const { analyser, cleanup } = createAudioAnalyser(track, opts.analyserOptions);\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const updateVolume = () => {\n      analyser.getFloatFrequencyData(dataArray);\n      let frequencies = new Float32Array(dataArray.length);\n      for (let i = 0; i < dataArray.length; i++) {\n        frequencies[i] = dataArray[i];\n      }\n      frequencies = frequencies.slice(options.loPass, options.hiPass);\n      const normalizedFrequencies = normalizeFrequencies(frequencies);\n      const chunkSize = Math.ceil(normalizedFrequencies.length / opts.bands);\n      const chunks = [];\n      for (let i = 0; i < opts.bands; i++) {\n        const summedVolumes = normalizedFrequencies.slice(i * chunkSize, (i + 1) * chunkSize).reduce((acc, val) => acc += val, 0);\n        chunks.push(summedVolumes / chunkSize);\n      }\n      setFrequencyBands(chunks);\n    };\n    const interval = setInterval(updateVolume, opts.updateInterval);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track == null ? void 0 : track.mediaStream, JSON.stringify(options)]);\n  return frequencyBands;\n}\nvar waveformDefaults = {\n  barCount: 120,\n  volMultiplier: 5,\n  updateInterval: 20\n};\nfunction useAudioWaveform(trackOrTrackReference, options = {}) {\n  var _a;\n  const track = trackOrTrackReference instanceof Track4 ? trackOrTrackReference : (_a = trackOrTrackReference == null ? void 0 : trackOrTrackReference.publication) == null ? void 0 : _a.track;\n  const opts = __spreadValues(__spreadValues({}, waveformDefaults), options);\n  const aggregateWave = React49.useRef(new Float32Array());\n  const timeRef = React49.useRef(performance.now());\n  const updates = React49.useRef(0);\n  const [bars, setBars] = React49.useState([]);\n  const onUpdate = React49.useCallback((wave) => {\n    setBars(\n      Array.from(\n        filterData(wave, opts.barCount).map((v) => Math.sqrt(v) * opts.volMultiplier)\n        // wave.slice(0, opts.barCount).map((v) => sigmoid(v * opts.volMultiplier, 0.08, 0.2)),\n      )\n    );\n  }, []);\n  React49.useEffect(() => {\n    if (!track || !(track == null ? void 0 : track.mediaStream)) {\n      return;\n    }\n    const { analyser, cleanup } = createAudioAnalyser(track, {\n      fftSize: getFFTSizeValue(opts.barCount)\n    });\n    const bufferLength = getFFTSizeValue(opts.barCount);\n    const dataArray = new Float32Array(bufferLength);\n    const update = () => {\n      updateWaveform = requestAnimationFrame(update);\n      analyser.getFloatTimeDomainData(dataArray);\n      aggregateWave.current.map((v, i) => v + dataArray[i]);\n      updates.current += 1;\n      if (performance.now() - timeRef.current >= opts.updateInterval) {\n        const newData = dataArray.map((v) => v / updates.current);\n        onUpdate(newData);\n        timeRef.current = performance.now();\n        updates.current = 0;\n      }\n    };\n    let updateWaveform = requestAnimationFrame(update);\n    return () => {\n      cleanup();\n      cancelAnimationFrame(updateWaveform);\n    };\n  }, [track, track == null ? void 0 : track.mediaStream, JSON.stringify(options), onUpdate]);\n  return {\n    bars\n  };\n}\nfunction getFFTSizeValue(x) {\n  if (x < 32) return 32;\n  else return pow2ceil(x);\n}\nfunction pow2ceil(v) {\n  let p = 2;\n  while (v >>= 1) {\n    p <<= 1;\n  }\n  return p;\n}\nfunction filterData(audioData, numSamples) {\n  const blockSize = Math.floor(audioData.length / numSamples);\n  const filteredData = new Float32Array(numSamples);\n  for (let i = 0; i < numSamples; i++) {\n    const blockStart = blockSize * i;\n    let sum = 0;\n    for (let j = 0; j < blockSize; j++) {\n      sum = sum + Math.abs(audioData[blockStart + j]);\n    }\n    filteredData[i] = sum / blockSize;\n  }\n  return filteredData;\n}\n\n// src/hooks/useParticipantTracks.ts\nimport * as React50 from \"react\";\nimport { participantTracksObservable } from \"@livekit/components-core\";\nfunction useParticipantTracks(sources, participantIdentity) {\n  const room = useRoomContext();\n  const participantContext = useMaybeParticipantContext();\n  const p = participantIdentity ? room.getParticipantByIdentity(participantIdentity) : participantContext;\n  const observable = React50.useMemo(\n    () => p ? participantTracksObservable(p, { sources }) : void 0,\n    [p == null ? void 0 : p.sid, p == null ? void 0 : p.identity, JSON.stringify(sources)]\n  );\n  const trackRefs = useObservableState(observable, []);\n  return trackRefs;\n}\n\n// src/hooks/useTrackTranscription.ts\nimport {\n  addMediaTimestampToTranscription as addTimestampsToTranscription,\n  dedupeSegments,\n  getTrackReferenceId as getTrackReferenceId3,\n  trackTranscriptionObserver\n} from \"@livekit/components-core\";\nimport * as React52 from \"react\";\n\n// src/hooks/useTrackSyncTime.ts\nimport * as React51 from \"react\";\nimport { trackSyncTimeObserver } from \"@livekit/components-core\";\nfunction useTrackSyncTime(ref) {\n  var _a, _b, _c;\n  const observable = React51.useMemo(\n    () => {\n      var _a2;\n      return ((_a2 = ref == null ? void 0 : ref.publication) == null ? void 0 : _a2.track) ? trackSyncTimeObserver(ref == null ? void 0 : ref.publication.track) : void 0;\n    },\n    [(_a = ref == null ? void 0 : ref.publication) == null ? void 0 : _a.track]\n  );\n  return useObservableState(observable, {\n    timestamp: Date.now(),\n    rtpTimestamp: (_c = (_b = ref == null ? void 0 : ref.publication) == null ? void 0 : _b.track) == null ? void 0 : _c.rtpTimestamp\n  });\n}\n\n// src/hooks/useTrackTranscription.ts\nvar TRACK_TRANSCRIPTION_DEFAULTS = {\n  bufferSize: 100\n  // maxAge: 2_000,\n};\nfunction useTrackTranscription(trackRef, options) {\n  const opts = __spreadValues(__spreadValues({}, TRACK_TRANSCRIPTION_DEFAULTS), options);\n  const [segments, setSegments] = React52.useState([]);\n  const syncTimestamps = useTrackSyncTime(trackRef);\n  const handleSegmentMessage = (newSegments) => {\n    var _a;\n    (_a = opts.onTranscription) == null ? void 0 : _a.call(opts, newSegments);\n    setSegments(\n      (prevSegments) => dedupeSegments(\n        prevSegments,\n        // when first receiving a segment, add the current media timestamp to it\n        newSegments.map((s) => addTimestampsToTranscription(s, syncTimestamps)),\n        opts.bufferSize\n      )\n    );\n  };\n  React52.useEffect(() => {\n    if (!(trackRef == null ? void 0 : trackRef.publication)) {\n      return;\n    }\n    const subscription = trackTranscriptionObserver(trackRef.publication).subscribe((evt) => {\n      handleSegmentMessage(...evt);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [trackRef && getTrackReferenceId3(trackRef), handleSegmentMessage]);\n  return { segments };\n}\n\n// src/hooks/useVoiceAssistant.ts\nimport * as React54 from \"react\";\nimport { ConnectionState as ConnectionState4, ParticipantKind, Track as Track5 } from \"livekit-client\";\n\n// src/hooks/useParticipantAttributes.ts\nimport { participantAttributesObserver } from \"@livekit/components-core\";\nimport * as React53 from \"react\";\nfunction useParticipantAttributes(props = {}) {\n  var _a;\n  const participantContext = useMaybeParticipantContext();\n  const p = (_a = props.participant) != null ? _a : participantContext;\n  const attributeObserver = React53.useMemo(\n    // weird typescript constraint\n    () => p ? participantAttributesObserver(p) : participantAttributesObserver(p),\n    [p]\n  );\n  const attributeState = useObservableState(attributeObserver, {\n    attributes: p == null ? void 0 : p.attributes\n  });\n  return attributeState;\n}\nfunction useParticipantAttribute(attributeKey, options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const [attribute, setAttribute] = React53.useState(p.attributes[attributeKey]);\n  React53.useEffect(() => {\n    if (!p) {\n      return;\n    }\n    const subscription = participantAttributesObserver(p).subscribe((val) => {\n      if (val.changed[attributeKey] !== void 0) {\n        setAttribute(val.changed[attributeKey]);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [p, attributeKey]);\n  return attribute;\n}\n\n// src/hooks/useVoiceAssistant.ts\nvar state_attribute = \"voice_assistant.state\";\nfunction useVoiceAssistant() {\n  const agent = useRemoteParticipants().find((p) => p.kind === ParticipantKind.AGENT);\n  const audioTrack = useParticipantTracks([Track5.Source.Microphone], agent == null ? void 0 : agent.identity)[0];\n  const { segments: agentTranscriptions } = useTrackTranscription(audioTrack);\n  const connectionState = useConnectionState();\n  const { attributes } = useParticipantAttributes({ participant: agent });\n  const state = React54.useMemo(() => {\n    if (connectionState === ConnectionState4.Disconnected) {\n      return \"disconnected\";\n    } else if (connectionState === ConnectionState4.Connecting || !agent || !(attributes == null ? void 0 : attributes[state_attribute])) {\n      return \"connecting\";\n    } else {\n      return attributes[state_attribute];\n    }\n  }, [attributes, agent, connectionState]);\n  return {\n    agent,\n    state,\n    audioTrack,\n    agentTranscriptions,\n    agentAttributes: attributes\n  };\n}\n\n// src/hooks/useIsRecording.ts\nimport { recordingStatusObservable } from \"@livekit/components-core\";\nimport * as React55 from \"react\";\nfunction useIsRecording(room) {\n  const r = useEnsureRoom(room);\n  const connectionState = useConnectionState(r);\n  const observable = React55.useMemo(() => recordingStatusObservable(r), [r, connectionState]);\n  const isRecording = useObservableState(observable, r.isRecording);\n  return isRecording;\n}\n\n// src/components/controls/ClearPinButton.tsx\nvar ClearPinButton = /* @__PURE__ */ React56.forwardRef(\n  function ClearPinButton2(props, ref) {\n    const { buttonProps } = useClearPinButton(props);\n    return /* @__PURE__ */ React56.createElement(\"button\", __spreadValues({ ref }, buttonProps), props.children);\n  }\n);\n\n// src/components/ConnectionState.tsx\nimport * as React57 from \"react\";\nvar ConnectionState5 = /* @__PURE__ */ React57.forwardRef(\n  function ConnectionState6(_a, ref) {\n    var _b = _a, { room } = _b, props = __objRest(_b, [\"room\"]);\n    const connectionState = useConnectionState(room);\n    return /* @__PURE__ */ React57.createElement(\"div\", __spreadValues({ ref }, props), connectionState);\n  }\n);\n\n// src/components/controls/ChatToggle.tsx\nimport * as React58 from \"react\";\nvar ChatToggle = /* @__PURE__ */ React58.forwardRef(\n  function ChatToggle2(props, ref) {\n    const { mergedProps } = useChatToggle({ props });\n    return /* @__PURE__ */ React58.createElement(\"button\", __spreadValues({ ref }, mergedProps), props.children);\n  }\n);\n\n// src/components/controls/DisconnectButton.tsx\nimport * as React59 from \"react\";\nvar DisconnectButton = /* @__PURE__ */ React59.forwardRef(\n  function DisconnectButton2(props, ref) {\n    const { buttonProps } = useDisconnectButton(props);\n    return /* @__PURE__ */ React59.createElement(\"button\", __spreadValues({ ref }, buttonProps), props.children);\n  }\n);\n\n// src/components/controls/FocusToggle.tsx\nimport * as React79 from \"react\";\n\n// src/assets/icons/CameraDisabledIcon.tsx\nimport * as React60 from \"react\";\nvar SvgCameraDisabledIcon = (props) => /* @__PURE__ */ React60.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ React60.createElement(\"path\", { d: \"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\" }), /* @__PURE__ */ React60.createElement(\"path\", { d: \"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" }));\nvar CameraDisabledIcon_default = SvgCameraDisabledIcon;\n\n// src/assets/icons/CameraIcon.tsx\nimport * as React61 from \"react\";\nvar SvgCameraIcon = (props) => /* @__PURE__ */ React61.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ React61.createElement(\"path\", { d: \"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" }));\nvar CameraIcon_default = SvgCameraIcon;\n\n// src/assets/icons/ChatCloseIcon.tsx\nimport * as React62 from \"react\";\nvar SvgChatCloseIcon = (props) => /* @__PURE__ */ React62.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, viewBox: \"0 0 24 24\" }, props), /* @__PURE__ */ React62.createElement(\n  \"path\",\n  {\n    fill: \"#FFF\",\n    d: \"M4.99 3.99a1 1 0 0 0-.697 1.717L10.586 12l-6.293 6.293a1 1 0 1 0 1.414 1.414L12 13.414l6.293 6.293a1 1 0 1 0 1.414-1.414L13.414 12l6.293-6.293a1 1 0 0 0-.727-1.717 1 1 0 0 0-.687.303L12 10.586 5.707 4.293a1 1 0 0 0-.717-.303z\"\n  }\n));\nvar ChatCloseIcon_default = SvgChatCloseIcon;\n\n// src/assets/icons/ChatIcon.tsx\nimport * as React63 from \"react\";\nvar SvgChatIcon = (props) => /* @__PURE__ */ React63.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 18, fill: \"none\" }, props), /* @__PURE__ */ React63.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React63.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar ChatIcon_default = SvgChatIcon;\n\n// src/assets/icons/Chevron.tsx\nimport * as React64 from \"react\";\nvar SvgChevron = (props) => /* @__PURE__ */ React64.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React64.createElement(\n  \"path\",\n  {\n    fill: \"currentcolor\",\n    fillRule: \"evenodd\",\n    d: \"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar Chevron_default = SvgChevron;\n\n// src/assets/icons/FocusToggleIcon.tsx\nimport * as React65 from \"react\";\nvar SvgFocusToggleIcon = (props) => /* @__PURE__ */ React65.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React65.createElement(\"g\", { stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.5 }, /* @__PURE__ */ React65.createElement(\"path\", { d: \"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\" })));\nvar FocusToggleIcon_default = SvgFocusToggleIcon;\n\n// src/assets/icons/GearIcon.tsx\nimport * as React66 from \"react\";\nvar SvgGearIcon = (props) => /* @__PURE__ */ React66.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React66.createElement(\n  \"path\",\n  {\n    fill: \"currentcolor\",\n    fillRule: \"evenodd\",\n    d: \"M8.961.894C8.875-.298 7.125-.298 7.04.894c-.066.912-1.246 1.228-1.76.472-.67-.99-2.186-.115-1.664.96.399.824-.465 1.688-1.288 1.289-1.076-.522-1.95.994-.961 1.665.756.513.44 1.693-.472 1.759-1.192.086-1.192 1.836 0 1.922.912.066 1.228 1.246.472 1.76-.99.67-.115 2.186.96 1.664.824-.399 1.688.465 1.289 1.288-.522 1.076.994 1.95 1.665.961.513-.756 1.693-.44 1.759.472.086 1.192 1.836 1.192 1.922 0 .066-.912 1.246-1.228 1.76-.472.67.99 2.186.115 1.664-.96-.399-.824.465-1.688 1.288-1.289 1.076.522 1.95-.994.961-1.665-.756-.513-.44-1.693.472-1.759 1.192-.086 1.192-1.836 0-1.922-.912-.066-1.228-1.246-.472-1.76.99-.67.115-2.186-.96-1.664-.824.399-1.688-.465-1.289-1.288.522-1.076-.994-1.95-1.665-.961-.513.756-1.693.44-1.759-.472ZM8 13A5 5 0 1 0 8 3a5 5 0 0 0 0 10Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar GearIcon_default = SvgGearIcon;\n\n// src/assets/icons/LeaveIcon.tsx\nimport * as React67 from \"react\";\nvar SvgLeaveIcon = (props) => /* @__PURE__ */ React67.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React67.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React67.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar LeaveIcon_default = SvgLeaveIcon;\n\n// src/assets/icons/LockLockedIcon.tsx\nimport * as React68 from \"react\";\nvar SvgLockLockedIcon = (props) => /* @__PURE__ */ React68.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React68.createElement(\n  \"path\",\n  {\n    fill: \"currentcolor\",\n    fillRule: \"evenodd\",\n    d: \"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar LockLockedIcon_default = SvgLockLockedIcon;\n\n// src/assets/icons/MicDisabledIcon.tsx\nimport * as React69 from \"react\";\nvar SvgMicDisabledIcon = (props) => /* @__PURE__ */ React69.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ React69.createElement(\"path\", { d: \"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\" }), /* @__PURE__ */ React69.createElement(\"path\", { d: \"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\" }));\nvar MicDisabledIcon_default = SvgMicDisabledIcon;\n\n// src/assets/icons/MicIcon.tsx\nimport * as React70 from \"react\";\nvar SvgMicIcon = (props) => /* @__PURE__ */ React70.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ React70.createElement(\n  \"path\",\n  {\n    fillRule: \"evenodd\",\n    d: \"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React70.createElement(\"path\", { d: \"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\" }));\nvar MicIcon_default = SvgMicIcon;\n\n// src/assets/icons/QualityExcellentIcon.tsx\nimport * as React71 from \"react\";\nvar SvgQualityExcellentIcon = (props) => /* @__PURE__ */ React71.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ React71.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React71.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }));\nvar QualityExcellentIcon_default = SvgQualityExcellentIcon;\n\n// src/assets/icons/QualityGoodIcon.tsx\nimport * as React72 from \"react\";\nvar SvgQualityGoodIcon = (props) => /* @__PURE__ */ React72.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ React72.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React72.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React72.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ React72.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React72.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" })));\nvar QualityGoodIcon_default = SvgQualityGoodIcon;\n\n// src/assets/icons/QualityPoorIcon.tsx\nimport * as React73 from \"react\";\nvar SvgQualityPoorIcon = (props) => /* @__PURE__ */ React73.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentcolor\" }, props), /* @__PURE__ */ React73.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React73.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React73.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ React73.createElement(\"path\", { d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React73.createElement(\"path\", { d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" }), /* @__PURE__ */ React73.createElement(\"path\", { d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" })));\nvar QualityPoorIcon_default = SvgQualityPoorIcon;\n\n// src/assets/icons/QualityUnknownIcon.tsx\nimport * as React74 from \"react\";\nvar SvgQualityUnknownIcon = (props) => /* @__PURE__ */ React74.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"currentColor\" }, props), /* @__PURE__ */ React74.createElement(\"g\", { opacity: 0.25 }, /* @__PURE__ */ React74.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" }), /* @__PURE__ */ React74.createElement(\"path\", { d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" })));\nvar QualityUnknownIcon_default = SvgQualityUnknownIcon;\n\n// src/assets/icons/ScreenShareIcon.tsx\nimport * as React75 from \"react\";\nvar SvgScreenShareIcon = (props) => /* @__PURE__ */ React75.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React75.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React75.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\",\n    clipRule: \"evenodd\"\n  }\n));\nvar ScreenShareIcon_default = SvgScreenShareIcon;\n\n// src/assets/icons/ScreenShareStopIcon.tsx\nimport * as React76 from \"react\";\nvar SvgScreenShareStopIcon = (props) => /* @__PURE__ */ React76.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React76.createElement(\"g\", { fill: \"currentColor\" }, /* @__PURE__ */ React76.createElement(\"path\", { d: \"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\" }), /* @__PURE__ */ React76.createElement(\n  \"path\",\n  {\n    fillRule: \"evenodd\",\n    d: \"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\",\n    clipRule: \"evenodd\"\n  }\n)));\nvar ScreenShareStopIcon_default = SvgScreenShareStopIcon;\n\n// src/assets/icons/SpinnerIcon.tsx\nimport * as React77 from \"react\";\nvar SvgSpinnerIcon = (props) => /* @__PURE__ */ React77.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.7\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.6\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.5\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\",\n    clipRule: \"evenodd\"\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.4\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.9\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.3\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.8\n  }\n), /* @__PURE__ */ React77.createElement(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\",\n    clipRule: \"evenodd\",\n    opacity: 0.2\n  }\n));\nvar SpinnerIcon_default = SvgSpinnerIcon;\n\n// src/assets/icons/UnfocusToggleIcon.tsx\nimport * as React78 from \"react\";\nvar SvgUnfocusToggleIcon = (props) => /* @__PURE__ */ React78.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\" }, props), /* @__PURE__ */ React78.createElement(\"g\", { stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: 1.5 }, /* @__PURE__ */ React78.createElement(\"path\", { d: \"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\" })));\nvar UnfocusToggleIcon_default = SvgUnfocusToggleIcon;\n\n// src/components/controls/FocusToggle.tsx\nvar FocusToggle = /* @__PURE__ */ React79.forwardRef(\n  function FocusToggle2(_a, ref) {\n    var _b = _a, { trackRef } = _b, props = __objRest(_b, [\"trackRef\"]);\n    const trackRefFromContext = useMaybeTrackRefContext();\n    const { mergedProps, inFocus } = useFocusToggle({\n      trackRef: trackRef != null ? trackRef : trackRefFromContext,\n      props\n    });\n    return /* @__PURE__ */ React79.createElement(LayoutContext.Consumer, null, (layoutContext) => layoutContext !== void 0 && /* @__PURE__ */ React79.createElement(\"button\", __spreadValues({ ref }, mergedProps), props.children ? props.children : inFocus ? /* @__PURE__ */ React79.createElement(UnfocusToggleIcon_default, null) : /* @__PURE__ */ React79.createElement(FocusToggleIcon_default, null)));\n  }\n);\n\n// src/components/controls/MediaDeviceSelect.tsx\nimport * as React81 from \"react\";\n\n// src/utils.ts\nimport * as React80 from \"react\";\nimport { log as log7 } from \"@livekit/components-core\";\nfunction isProp(prop) {\n  return prop !== void 0;\n}\nfunction mergeProps2(...props) {\n  return mergeProps(...props.filter(isProp));\n}\nfunction cloneSingleChild(children, props, key) {\n  return React80.Children.map(children, (child) => {\n    if (React80.isValidElement(child) && React80.Children.only(children)) {\n      return React80.cloneElement(child, __spreadProps(__spreadValues({}, props), { key }));\n    }\n    return child;\n  });\n}\nfunction warnAboutMissingStyles(el) {\n  var _a, _b;\n  if (typeof window !== \"undefined\" && typeof process !== \"undefined\" && // eslint-disable-next-line turbo/no-undeclared-env-vars\n  (((_a = process == null ? void 0 : process.env) == null ? void 0 : _a.NODE_ENV) === \"dev\" || // eslint-disable-next-line turbo/no-undeclared-env-vars\n  ((_b = process == null ? void 0 : process.env) == null ? void 0 : _b.NODE_ENV) === \"development\")) {\n    const target = el != null ? el : document.querySelector(\".lk-room-container\");\n    if (target && !getComputedStyle(target).getPropertyValue(\"--lk-has-imported-styles\")) {\n      log7.warn(\n        \"It looks like you're not using the `@livekit/components-styles package`. To render the UI with the default styling, please import it in your layout or page.\"\n      );\n    }\n  }\n}\n\n// src/components/controls/MediaDeviceSelect.tsx\nimport { RoomEvent as RoomEvent2 } from \"livekit-client\";\nvar MediaDeviceSelect = /* @__PURE__ */ React81.forwardRef(\n  function MediaDeviceSelect2(_a, ref) {\n    var _b = _a, {\n      kind,\n      initialSelection,\n      onActiveDeviceChange,\n      onDeviceListChange,\n      onDeviceSelectError,\n      exactMatch,\n      track,\n      requestPermissions,\n      onError\n    } = _b, props = __objRest(_b, [\n      \"kind\",\n      \"initialSelection\",\n      \"onActiveDeviceChange\",\n      \"onDeviceListChange\",\n      \"onDeviceSelectError\",\n      \"exactMatch\",\n      \"track\",\n      \"requestPermissions\",\n      \"onError\"\n    ]);\n    const room = useMaybeRoomContext();\n    const handleError = React81.useCallback(\n      (e) => {\n        if (room) {\n          room.emit(RoomEvent2.MediaDevicesError, e);\n        }\n        onError == null ? void 0 : onError(e);\n      },\n      [room, onError]\n    );\n    const { devices, activeDeviceId, setActiveMediaDevice, className } = useMediaDeviceSelect({\n      kind,\n      room,\n      track,\n      requestPermissions,\n      onError: handleError\n    });\n    React81.useEffect(() => {\n      if (initialSelection !== void 0) {\n        setActiveMediaDevice(initialSelection);\n      }\n    }, [setActiveMediaDevice]);\n    React81.useEffect(() => {\n      if (typeof onDeviceListChange === \"function\") {\n        onDeviceListChange(devices);\n      }\n    }, [onDeviceListChange, devices]);\n    React81.useEffect(() => {\n      if (activeDeviceId && activeDeviceId !== \"\") {\n        onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(activeDeviceId);\n      }\n    }, [activeDeviceId]);\n    const handleActiveDeviceChange = (deviceId) => __async(this, null, function* () {\n      try {\n        yield setActiveMediaDevice(deviceId, { exact: exactMatch });\n      } catch (e) {\n        if (e instanceof Error) {\n          onDeviceSelectError == null ? void 0 : onDeviceSelectError(e);\n        } else {\n          throw e;\n        }\n      }\n    });\n    const mergedProps = React81.useMemo(\n      () => mergeProps2(props, { className }, { className: \"lk-list\" }),\n      [className, props]\n    );\n    function isActive(deviceId, activeDeviceId2, index) {\n      return deviceId === activeDeviceId2 || index === 0 && activeDeviceId2 === \"default\";\n    }\n    return /* @__PURE__ */ React81.createElement(\"ul\", __spreadValues({ ref }, mergedProps), devices.map((device, index) => /* @__PURE__ */ React81.createElement(\n      \"li\",\n      {\n        key: device.deviceId,\n        id: device.deviceId,\n        \"data-lk-active\": isActive(device.deviceId, activeDeviceId, index),\n        \"aria-selected\": isActive(device.deviceId, activeDeviceId, index),\n        role: \"option\"\n      },\n      /* @__PURE__ */ React81.createElement(\"button\", { className: \"lk-button\", onClick: () => handleActiveDeviceChange(device.deviceId) }, device.label)\n    )));\n  }\n);\n\n// src/components/controls/StartAudio.tsx\nimport * as React82 from \"react\";\nvar StartAudio = /* @__PURE__ */ React82.forwardRef(\n  function StartAudio2(_a, ref) {\n    var _b = _a, { label = \"Allow Audio\" } = _b, props = __objRest(_b, [\"label\"]);\n    const room = useRoomContext();\n    const { mergedProps } = useStartAudio({ room, props });\n    return /* @__PURE__ */ React82.createElement(\"button\", __spreadValues({ ref }, mergedProps), label);\n  }\n);\n\n// src/components/controls/TrackToggle.tsx\nimport * as React84 from \"react\";\n\n// src/assets/icons/util.tsx\nimport * as React83 from \"react\";\nimport { ConnectionQuality as ConnectionQuality2, Track as Track6 } from \"livekit-client\";\nfunction getSourceIcon(source, enabled) {\n  switch (source) {\n    case Track6.Source.Microphone:\n      return enabled ? /* @__PURE__ */ React83.createElement(MicIcon_default, null) : /* @__PURE__ */ React83.createElement(MicDisabledIcon_default, null);\n    case Track6.Source.Camera:\n      return enabled ? /* @__PURE__ */ React83.createElement(CameraIcon_default, null) : /* @__PURE__ */ React83.createElement(CameraDisabledIcon_default, null);\n    case Track6.Source.ScreenShare:\n      return enabled ? /* @__PURE__ */ React83.createElement(ScreenShareStopIcon_default, null) : /* @__PURE__ */ React83.createElement(ScreenShareIcon_default, null);\n    default:\n      return void 0;\n  }\n}\nfunction getConnectionQualityIcon(quality) {\n  switch (quality) {\n    case ConnectionQuality2.Excellent:\n      return /* @__PURE__ */ React83.createElement(QualityExcellentIcon_default, null);\n    case ConnectionQuality2.Good:\n      return /* @__PURE__ */ React83.createElement(QualityGoodIcon_default, null);\n    case ConnectionQuality2.Poor:\n      return /* @__PURE__ */ React83.createElement(QualityPoorIcon_default, null);\n    default:\n      return /* @__PURE__ */ React83.createElement(QualityUnknownIcon_default, null);\n  }\n}\n\n// src/components/controls/TrackToggle.tsx\nvar TrackToggle = /* @__PURE__ */ React84.forwardRef(function TrackToggle2(_a, ref) {\n  var _b = _a, { showIcon } = _b, props = __objRest(_b, [\"showIcon\"]);\n  const { buttonProps, enabled } = useTrackToggle(props);\n  return /* @__PURE__ */ React84.createElement(\"button\", __spreadValues({ ref }, buttonProps), (showIcon != null ? showIcon : true) && getSourceIcon(props.source, enabled), props.children);\n});\n\n// src/components/layout/FocusLayout.tsx\nimport * as React93 from \"react\";\n\n// src/components/participant/ParticipantTile.tsx\nimport * as React92 from \"react\";\nimport { Track as Track7 } from \"livekit-client\";\nimport { isTrackReference as isTrackReference3, isTrackReferencePinned as isTrackReferencePinned2 } from \"@livekit/components-core\";\n\n// src/components/participant/ConnectionQualityIndicator.tsx\nimport * as React85 from \"react\";\nvar ConnectionQualityIndicator = /* @__PURE__ */ React85.forwardRef(function ConnectionQualityIndicator2(props, ref) {\n  var _a;\n  const { className, quality } = useConnectionQualityIndicator(props);\n  const elementProps = React85.useMemo(() => {\n    return __spreadProps(__spreadValues({}, mergeProps2(props, { className })), { \"data-lk-quality\": quality });\n  }, [quality, props, className]);\n  return /* @__PURE__ */ React85.createElement(\"div\", __spreadValues({ ref }, elementProps), (_a = props.children) != null ? _a : getConnectionQualityIcon(quality));\n});\n\n// src/components/participant/ParticipantName.tsx\nimport { setupParticipantName } from \"@livekit/components-core\";\nimport * as React86 from \"react\";\nvar ParticipantName = /* @__PURE__ */ React86.forwardRef(\n  function ParticipantName2(_a, ref) {\n    var _b = _a, { participant } = _b, props = __objRest(_b, [\"participant\"]);\n    const p = useEnsureParticipant(participant);\n    const { className, infoObserver } = React86.useMemo(() => {\n      return setupParticipantName(p);\n    }, [p]);\n    const { identity, name } = useObservableState(infoObserver, {\n      name: p.name,\n      identity: p.identity,\n      metadata: p.metadata\n    });\n    const mergedProps = React86.useMemo(() => {\n      return mergeProps2(props, { className, \"data-lk-participant-name\": name });\n    }, [props, className, name]);\n    return /* @__PURE__ */ React86.createElement(\"span\", __spreadValues({ ref }, mergedProps), name !== \"\" ? name : identity, props.children);\n  }\n);\n\n// src/components/participant/TrackMutedIndicator.tsx\nimport * as React87 from \"react\";\nvar TrackMutedIndicator = /* @__PURE__ */ React87.forwardRef(\n  function TrackMutedIndicator2(_a, ref) {\n    var _b = _a, { trackRef, show = \"always\" } = _b, props = __objRest(_b, [\"trackRef\", \"show\"]);\n    var _a2;\n    const { className, isMuted } = useTrackMutedIndicator(trackRef);\n    const showIndicator = show === \"always\" || show === \"muted\" && isMuted || show === \"unmuted\" && !isMuted;\n    const htmlProps = React87.useMemo(\n      () => mergeProps2(props, {\n        className\n      }),\n      [className, props]\n    );\n    if (!showIndicator) {\n      return null;\n    }\n    return /* @__PURE__ */ React87.createElement(\"div\", __spreadProps(__spreadValues({ ref }, htmlProps), { \"data-lk-muted\": isMuted }), (_a2 = props.children) != null ? _a2 : getSourceIcon(trackRef.source, !isMuted));\n  }\n);\n\n// src/assets/images/ParticipantPlaceholder.tsx\nimport * as React88 from \"react\";\nvar SvgParticipantPlaceholder = (props) => /* @__PURE__ */ React88.createElement(\n  \"svg\",\n  __spreadValues({\n    width: 320,\n    height: 320,\n    viewBox: \"0 0 320 320\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props),\n  /* @__PURE__ */ React88.createElement(\n    \"path\",\n    {\n      d: \"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\",\n      fill: \"white\",\n      fillOpacity: 0.25\n    }\n  ),\n  /* @__PURE__ */ React88.createElement(\n    \"path\",\n    {\n      d: \"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\",\n      fill: \"white\",\n      fillOpacity: 0.25\n    }\n  )\n);\nvar ParticipantPlaceholder_default = SvgParticipantPlaceholder;\n\n// src/components/participant/VideoTrack.tsx\nimport { RemoteTrackPublication } from \"livekit-client\";\nimport * as React90 from \"react\";\n\n// src/hooks/useMediaTrackBySourceOrName.ts\nimport { isTrackReference as isTrackReference2 } from \"@livekit/components-core\";\nimport { setupMediaTrack as setupMediaTrack2, log as log8, isLocal, getTrackByIdentifier as getTrackByIdentifier2 } from \"@livekit/components-core\";\nimport * as React89 from \"react\";\nfunction useMediaTrackBySourceOrName(observerOptions, options = {}) {\n  var _a;\n  const [publication, setPublication] = React89.useState(getTrackByIdentifier2(observerOptions));\n  const [isMuted, setMuted] = React89.useState(publication == null ? void 0 : publication.isMuted);\n  const [isSubscribed, setSubscribed] = React89.useState(publication == null ? void 0 : publication.isSubscribed);\n  const [track, setTrack] = React89.useState(publication == null ? void 0 : publication.track);\n  const [orientation, setOrientation] = React89.useState(\"landscape\");\n  const previousElement = React89.useRef();\n  const { className, trackObserver } = React89.useMemo(() => {\n    return setupMediaTrack2(observerOptions);\n  }, [\n    (_a = observerOptions.participant.sid) != null ? _a : observerOptions.participant.identity,\n    observerOptions.source,\n    isTrackReference2(observerOptions) && observerOptions.publication.trackSid\n  ]);\n  React89.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication2) => {\n      log8.debug(\"update track\", publication2);\n      setPublication(publication2);\n      setMuted(publication2 == null ? void 0 : publication2.isMuted);\n      setSubscribed(publication2 == null ? void 0 : publication2.isSubscribed);\n      setTrack(publication2 == null ? void 0 : publication2.track);\n    });\n    return () => subscription == null ? void 0 : subscription.unsubscribe();\n  }, [trackObserver]);\n  React89.useEffect(() => {\n    var _a2, _b;\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (((_a2 = options.element) == null ? void 0 : _a2.current) && !(isLocal(observerOptions.participant) && (track == null ? void 0 : track.kind) === \"audio\")) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = (_b = options.element) == null ? void 0 : _b.current;\n    return () => {\n      if (previousElement.current) {\n        track == null ? void 0 : track.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n  React89.useEffect(() => {\n    var _a2, _b;\n    if (typeof ((_a2 = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _a2.width) === \"number\" && typeof ((_b = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _b.height) === \"number\") {\n      const orientation_ = publication.dimensions.width > publication.dimensions.height ? \"landscape\" : \"portrait\";\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps2(options.props, __spreadValues({\n      className,\n      \"data-lk-local-participant\": observerOptions.participant.isLocal,\n      \"data-lk-source\": publication == null ? void 0 : publication.source\n    }, (publication == null ? void 0 : publication.kind) === \"video\" && { \"data-lk-orientation\": orientation }))\n  };\n}\n\n// src/components/participant/VideoTrack.tsx\nimport * as useHooks from \"usehooks-ts\";\nvar VideoTrack = /* @__PURE__ */ React90.forwardRef(\n  function VideoTrack2(_a, ref) {\n    var _b = _a, {\n      onTrackClick,\n      onClick,\n      onSubscriptionStatusChanged,\n      trackRef,\n      manageSubscription\n    } = _b, props = __objRest(_b, [\n      \"onTrackClick\",\n      \"onClick\",\n      \"onSubscriptionStatusChanged\",\n      \"trackRef\",\n      \"manageSubscription\"\n    ]);\n    const trackReference = useEnsureTrackRef(trackRef);\n    const mediaEl = React90.useRef(null);\n    React90.useImperativeHandle(ref, () => mediaEl.current);\n    const intersectionEntry = useHooks.useIntersectionObserver({ root: mediaEl.current });\n    const [debouncedIntersectionEntry] = useHooks.useDebounceValue(intersectionEntry, 3e3);\n    React90.useEffect(() => {\n      if (manageSubscription && trackReference.publication instanceof RemoteTrackPublication && (debouncedIntersectionEntry == null ? void 0 : debouncedIntersectionEntry.isIntersecting) === false && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === false) {\n        trackReference.publication.setSubscribed(false);\n      }\n    }, [debouncedIntersectionEntry, trackReference, manageSubscription]);\n    React90.useEffect(() => {\n      if (manageSubscription && trackReference.publication instanceof RemoteTrackPublication && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === true) {\n        trackReference.publication.setSubscribed(true);\n      }\n    }, [intersectionEntry, trackReference, manageSubscription]);\n    const {\n      elementProps,\n      publication: pub,\n      isSubscribed\n    } = useMediaTrackBySourceOrName(trackReference, {\n      element: mediaEl,\n      props\n    });\n    React90.useEffect(() => {\n      onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n    }, [isSubscribed, onSubscriptionStatusChanged]);\n    const clickHandler = (evt) => {\n      onClick == null ? void 0 : onClick(evt);\n      onTrackClick == null ? void 0 : onTrackClick({ participant: trackReference == null ? void 0 : trackReference.participant, track: pub });\n    };\n    return /* @__PURE__ */ React90.createElement(\"video\", __spreadProps(__spreadValues({ ref: mediaEl }, elementProps), { muted: true, onClick: clickHandler }));\n  }\n);\n\n// src/components/participant/AudioTrack.tsx\nimport * as React91 from \"react\";\nimport { log as log9 } from \"@livekit/components-core\";\nimport { RemoteAudioTrack, RemoteTrackPublication as RemoteTrackPublication2 } from \"livekit-client\";\nvar AudioTrack = /* @__PURE__ */ React91.forwardRef(\n  function AudioTrack2(_a, ref) {\n    var _b = _a, { trackRef, onSubscriptionStatusChanged, volume, muted } = _b, props = __objRest(_b, [\"trackRef\", \"onSubscriptionStatusChanged\", \"volume\", \"muted\"]);\n    const trackReference = useEnsureTrackRef(trackRef);\n    const mediaEl = React91.useRef(null);\n    React91.useImperativeHandle(ref, () => mediaEl.current);\n    const {\n      elementProps,\n      isSubscribed,\n      track,\n      publication: pub\n    } = useMediaTrackBySourceOrName(trackReference, {\n      element: mediaEl,\n      props\n    });\n    React91.useEffect(() => {\n      onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n    }, [isSubscribed, onSubscriptionStatusChanged]);\n    React91.useEffect(() => {\n      if (track === void 0 || volume === void 0) {\n        return;\n      }\n      if (track instanceof RemoteAudioTrack) {\n        track.setVolume(volume);\n      } else {\n        log9.warn(\"Volume can only be set on remote audio tracks.\");\n      }\n    }, [volume, track]);\n    React91.useEffect(() => {\n      if (pub === void 0 || muted === void 0) {\n        return;\n      }\n      if (pub instanceof RemoteTrackPublication2) {\n        pub.setEnabled(!muted);\n      } else {\n        log9.warn(\"Can only call setEnabled on remote track publications.\");\n      }\n    }, [muted, pub, track]);\n    return /* @__PURE__ */ React91.createElement(\"audio\", __spreadValues({ ref: mediaEl }, elementProps));\n  }\n);\n\n// src/components/participant/ParticipantTile.tsx\nfunction ParticipantContextIfNeeded(props) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? /* @__PURE__ */ React92.createElement(ParticipantContext.Provider, { value: props.participant }, props.children) : /* @__PURE__ */ React92.createElement(React92.Fragment, null, props.children);\n}\nfunction TrackRefContextIfNeeded(props) {\n  const hasContext = !!useMaybeTrackRefContext();\n  return props.trackRef && !hasContext ? /* @__PURE__ */ React92.createElement(TrackRefContext.Provider, { value: props.trackRef }, props.children) : /* @__PURE__ */ React92.createElement(React92.Fragment, null, props.children);\n}\nvar ParticipantTile = /* @__PURE__ */ React92.forwardRef(\n  function ParticipantTile2(_a, ref) {\n    var _b = _a, {\n      trackRef,\n      children,\n      onParticipantClick,\n      disableSpeakingIndicator\n    } = _b, htmlProps = __objRest(_b, [\n      \"trackRef\",\n      \"children\",\n      \"onParticipantClick\",\n      \"disableSpeakingIndicator\"\n    ]);\n    var _a2, _b2;\n    const trackReference = useEnsureTrackRef(trackRef);\n    const { elementProps } = useParticipantTile({\n      htmlProps,\n      disableSpeakingIndicator,\n      onParticipantClick,\n      trackRef: trackReference\n    });\n    const isEncrypted = useIsEncrypted(trackReference.participant);\n    const layoutContext = useMaybeLayoutContext();\n    const autoManageSubscription = (_a2 = useFeatureContext()) == null ? void 0 : _a2.autoSubscription;\n    const handleSubscribe = React92.useCallback(\n      (subscribed) => {\n        if (trackReference.source && !subscribed && layoutContext && layoutContext.pin.dispatch && isTrackReferencePinned2(trackReference, layoutContext.pin.state)) {\n          layoutContext.pin.dispatch({ msg: \"clear_pin\" });\n        }\n      },\n      [trackReference, layoutContext]\n    );\n    return /* @__PURE__ */ React92.createElement(\"div\", __spreadValues({ ref, style: { position: \"relative\" } }, elementProps), /* @__PURE__ */ React92.createElement(TrackRefContextIfNeeded, { trackRef: trackReference }, /* @__PURE__ */ React92.createElement(ParticipantContextIfNeeded, { participant: trackReference.participant }, children != null ? children : /* @__PURE__ */ React92.createElement(React92.Fragment, null, isTrackReference3(trackReference) && (((_b2 = trackReference.publication) == null ? void 0 : _b2.kind) === \"video\" || trackReference.source === Track7.Source.Camera || trackReference.source === Track7.Source.ScreenShare) ? /* @__PURE__ */ React92.createElement(\n      VideoTrack,\n      {\n        trackRef: trackReference,\n        onSubscriptionStatusChanged: handleSubscribe,\n        manageSubscription: autoManageSubscription\n      }\n    ) : isTrackReference3(trackReference) && /* @__PURE__ */ React92.createElement(\n      AudioTrack,\n      {\n        trackRef: trackReference,\n        onSubscriptionStatusChanged: handleSubscribe\n      }\n    ), /* @__PURE__ */ React92.createElement(\"div\", { className: \"lk-participant-placeholder\" }, /* @__PURE__ */ React92.createElement(ParticipantPlaceholder_default, null)), /* @__PURE__ */ React92.createElement(\"div\", { className: \"lk-participant-metadata\" }, /* @__PURE__ */ React92.createElement(\"div\", { className: \"lk-participant-metadata-item\" }, trackReference.source === Track7.Source.Camera ? /* @__PURE__ */ React92.createElement(React92.Fragment, null, isEncrypted && /* @__PURE__ */ React92.createElement(LockLockedIcon_default, { style: { marginRight: \"0.25rem\" } }), /* @__PURE__ */ React92.createElement(\n      TrackMutedIndicator,\n      {\n        trackRef: {\n          participant: trackReference.participant,\n          source: Track7.Source.Microphone\n        },\n        show: \"muted\"\n      }\n    ), /* @__PURE__ */ React92.createElement(ParticipantName, null)) : /* @__PURE__ */ React92.createElement(React92.Fragment, null, /* @__PURE__ */ React92.createElement(ScreenShareIcon_default, { style: { marginRight: \"0.25rem\" } }), /* @__PURE__ */ React92.createElement(ParticipantName, null, \"'s screen\"))), /* @__PURE__ */ React92.createElement(ConnectionQualityIndicator, { className: \"lk-participant-metadata-item\" }))), /* @__PURE__ */ React92.createElement(FocusToggle, { trackRef: trackReference }))));\n  }\n);\n\n// src/components/layout/FocusLayout.tsx\nfunction FocusLayoutContainer(props) {\n  const elementProps = mergeProps2(props, { className: \"lk-focus-layout\" });\n  return /* @__PURE__ */ React93.createElement(\"div\", __spreadValues({}, elementProps), props.children);\n}\nfunction FocusLayout(_a) {\n  var _b = _a, { trackRef } = _b, htmlProps = __objRest(_b, [\"trackRef\"]);\n  return /* @__PURE__ */ React93.createElement(ParticipantTile, __spreadValues({ trackRef }, htmlProps));\n}\n\n// src/components/layout/GridLayout.tsx\nimport * as React97 from \"react\";\n\n// src/components/TrackLoop.tsx\nimport * as React94 from \"react\";\nimport { getTrackReferenceId as getTrackReferenceId4 } from \"@livekit/components-core\";\nfunction TrackLoop(_a) {\n  var _b = _a, { tracks } = _b, props = __objRest(_b, [\"tracks\"]);\n  return /* @__PURE__ */ React94.createElement(React94.Fragment, null, tracks.map((trackReference) => {\n    return /* @__PURE__ */ React94.createElement(\n      TrackRefContext.Provider,\n      {\n        value: trackReference,\n        key: getTrackReferenceId4(trackReference)\n      },\n      cloneSingleChild(props.children)\n    );\n  }));\n}\n\n// src/components/controls/PaginationControl.tsx\nimport * as React95 from \"react\";\nimport { createInteractingObservable } from \"@livekit/components-core\";\nfunction PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement\n}) {\n  const [interactive, setInteractive] = React95.useState(false);\n  React95.useEffect(() => {\n    let subscription;\n    if (connectedElement) {\n      subscription = createInteractingObservable(connectedElement.current, 2e3).subscribe(\n        setInteractive\n      );\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n  return /* @__PURE__ */ React95.createElement(\"div\", { className: \"lk-pagination-control\", \"data-lk-user-interaction\": interactive }, /* @__PURE__ */ React95.createElement(\"button\", { className: \"lk-button\", onClick: prevPage }, /* @__PURE__ */ React95.createElement(Chevron_default, null)), /* @__PURE__ */ React95.createElement(\"span\", { className: \"lk-pagination-count\" }, `${currentPage} of ${totalPageCount}`), /* @__PURE__ */ React95.createElement(\"button\", { className: \"lk-button\", onClick: nextPage }, /* @__PURE__ */ React95.createElement(Chevron_default, null)));\n}\n\n// src/components/controls/PaginationIndicator.tsx\nimport * as React96 from \"react\";\nvar PaginationIndicator = /* @__PURE__ */ React96.forwardRef(\n  function PaginationIndicator2({ totalPageCount, currentPage }, ref) {\n    const bubbles = new Array(totalPageCount).fill(\"\").map((_, index) => {\n      if (index + 1 === currentPage) {\n        return /* @__PURE__ */ React96.createElement(\"span\", { \"data-lk-active\": true, key: index });\n      } else {\n        return /* @__PURE__ */ React96.createElement(\"span\", { key: index });\n      }\n    });\n    return /* @__PURE__ */ React96.createElement(\"div\", { ref, className: \"lk-pagination-indicator\" }, bubbles);\n  }\n);\n\n// src/components/layout/GridLayout.tsx\nfunction GridLayout(_a) {\n  var _b = _a, { tracks } = _b, props = __objRest(_b, [\"tracks\"]);\n  const gridEl = React97.createRef();\n  const elementProps = React97.useMemo(\n    () => mergeProps2(props, { className: \"lk-grid-layout\" }),\n    [props]\n  );\n  const { layout } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage\n  });\n  return /* @__PURE__ */ React97.createElement(\"div\", __spreadValues({ ref: gridEl, \"data-lk-pagination\": pagination.totalPageCount > 1 }, elementProps), /* @__PURE__ */ React97.createElement(TrackLoop, { tracks: pagination.tracks }, props.children), tracks.length > layout.maxTiles && /* @__PURE__ */ React97.createElement(React97.Fragment, null, /* @__PURE__ */ React97.createElement(\n    PaginationIndicator,\n    {\n      totalPageCount: pagination.totalPageCount,\n      currentPage: pagination.currentPage\n    }\n  ), /* @__PURE__ */ React97.createElement(PaginationControl, __spreadValues({ pagesContainer: gridEl }, pagination))));\n}\n\n// src/components/layout/CarouselLayout.tsx\nimport { getScrollBarWidth } from \"@livekit/components-core\";\nimport * as React98 from \"react\";\nvar MIN_HEIGHT = 130;\nvar MIN_WIDTH = 140;\nvar MIN_VISIBLE_TILES = 1;\nvar ASPECT_RATIO = 16 / 10;\nvar ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\nfunction CarouselLayout(_a) {\n  var _b = _a, { tracks, orientation } = _b, props = __objRest(_b, [\"tracks\", \"orientation\"]);\n  const asideEl = React98.useRef(null);\n  const [prevTiles, setPrevTiles] = React98.useState(0);\n  const { width, height } = useSize(asideEl);\n  const carouselOrientation = orientation ? orientation : height >= width ? \"vertical\" : \"horizontal\";\n  const tileSpan = carouselOrientation === \"vertical\" ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT) : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = getScrollBarWidth();\n  const tilesThatFit = carouselOrientation === \"vertical\" ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES) : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n  React98.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty(\"--lk-max-visible-tiles\", maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n  return /* @__PURE__ */ React98.createElement(\"aside\", __spreadValues({ key: carouselOrientation, className: \"lk-carousel\", ref: asideEl }, props), /* @__PURE__ */ React98.createElement(TrackLoop, { tracks: sortedTiles }, props.children));\n}\n\n// src/components/layout/LayoutContextProvider.tsx\nimport { log as log10 } from \"@livekit/components-core\";\nimport * as React99 from \"react\";\nfunction LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children\n}) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n  React99.useEffect(() => {\n    log10.debug(\"PinState Updated\", { state: layoutContextValue.pin.state });\n    if (onPinChange && layoutContextValue.pin.state) onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n  React99.useEffect(() => {\n    log10.debug(\"Widget Updated\", { widgetState: layoutContextValue.widget.state });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n  return /* @__PURE__ */ React99.createElement(LayoutContext.Provider, { value: layoutContextValue }, children);\n}\n\n// src/components/LiveKitRoom.tsx\nimport * as React100 from \"react\";\nvar LiveKitRoom = /* @__PURE__ */ React100.forwardRef(function LiveKitRoom2(props, ref) {\n  const { room, htmlProps } = useLiveKitRoom(props);\n  return /* @__PURE__ */ React100.createElement(\"div\", __spreadValues({ ref }, htmlProps), room && /* @__PURE__ */ React100.createElement(RoomContext.Provider, { value: room }, /* @__PURE__ */ React100.createElement(LKFeatureContext.Provider, { value: props.featureFlags }, props.children)));\n});\n\n// src/components/participant/AudioVisualizer.tsx\nimport * as React101 from \"react\";\nvar AudioVisualizer = /* @__PURE__ */ React101.forwardRef(\n  function AudioVisualizer2(_a, ref) {\n    var _b = _a, { trackRef } = _b, props = __objRest(_b, [\"trackRef\"]);\n    const svgWidth = 200;\n    const svgHeight = 90;\n    const barWidth = 6;\n    const barSpacing = 4;\n    const volMultiplier = 50;\n    const barCount = 7;\n    const trackReference = useEnsureTrackRef(trackRef);\n    const volumes = useMultibandTrackVolume(trackReference, { bands: 7, loPass: 300 });\n    return /* @__PURE__ */ React101.createElement(\n      \"svg\",\n      __spreadProps(__spreadValues({\n        ref,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: `0 0 ${svgWidth} ${svgHeight}`\n      }, props), {\n        className: \"lk-audio-visualizer\"\n      }),\n      /* @__PURE__ */ React101.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\" }),\n      /* @__PURE__ */ React101.createElement(\n        \"g\",\n        {\n          style: {\n            transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`\n          }\n        },\n        volumes.map((vol, idx) => /* @__PURE__ */ React101.createElement(\n          \"rect\",\n          {\n            key: idx,\n            x: idx * (barWidth + barSpacing),\n            y: svgHeight / 2 - vol * volMultiplier / 2,\n            width: barWidth,\n            height: vol * volMultiplier\n          }\n        ))\n      )\n    );\n  }\n);\n\n// src/components/ParticipantLoop.tsx\nimport * as React102 from \"react\";\nfunction ParticipantLoop(_a) {\n  var _b = _a, { participants } = _b, props = __objRest(_b, [\"participants\"]);\n  return /* @__PURE__ */ React102.createElement(React102.Fragment, null, participants.map((participant) => /* @__PURE__ */ React102.createElement(ParticipantContext.Provider, { value: participant, key: participant.identity }, cloneSingleChild(props.children))));\n}\n\n// src/components/RoomAudioRenderer.tsx\nimport { getTrackReferenceId as getTrackReferenceId5, isLocal as isLocal2 } from \"@livekit/components-core\";\nimport { Track as Track8 } from \"livekit-client\";\nimport * as React103 from \"react\";\nfunction RoomAudioRenderer({ volume, muted }) {\n  const tracks = useTracks(\n    [Track8.Source.Microphone, Track8.Source.ScreenShareAudio, Track8.Source.Unknown],\n    {\n      updateOnlyOn: [],\n      onlySubscribed: true\n    }\n  ).filter((ref) => !isLocal2(ref.participant) && ref.publication.kind === Track8.Kind.Audio);\n  return /* @__PURE__ */ React103.createElement(\"div\", { style: { display: \"none\" } }, tracks.map((trackRef) => /* @__PURE__ */ React103.createElement(\n    AudioTrack,\n    {\n      key: getTrackReferenceId5(trackRef),\n      trackRef,\n      volume,\n      muted\n    }\n  )));\n}\n\n// src/components/RoomName.tsx\nimport * as React104 from \"react\";\nvar RoomName = /* @__PURE__ */ React104.forwardRef(function RoomName2(_a, ref) {\n  var _b = _a, { childrenPosition = \"before\", children } = _b, htmlAttributes = __objRest(_b, [\"childrenPosition\", \"children\"]);\n  const { name } = useRoomInfo();\n  return /* @__PURE__ */ React104.createElement(\"span\", __spreadValues({ ref }, htmlAttributes), childrenPosition === \"before\" && children, name, childrenPosition === \"after\" && children);\n});\n\n// src/components/Toast.tsx\nimport * as React105 from \"react\";\nfunction Toast(props) {\n  const htmlProps = React105.useMemo(() => mergeProps2(props, { className: \"lk-toast\" }), [props]);\n  return /* @__PURE__ */ React105.createElement(\"div\", __spreadValues({}, htmlProps), props.children);\n}\n\n// src/components/participant/ParticipantAudioTile.tsx\nimport * as React107 from \"react\";\nimport { isTrackReference as isTrackReference4 } from \"@livekit/components-core\";\n\n// src/components/participant/BarVisualizer.tsx\nimport * as React106 from \"react\";\n\n// src/components/participant/animators/useBarAnimator.ts\nimport { useEffect as useEffect27, useRef as useRef10, useState as useState22 } from \"react\";\n\n// src/components/participant/animationSequences/connectingSequence.ts\nvar generateConnectingSequenceBar = (columns) => {\n  const seq = [];\n  for (let x = 0; x <= columns; x++) {\n    seq.push([x, columns - 1 - x]);\n  }\n  return seq;\n};\n\n// src/components/participant/animationSequences/listeningSequence.ts\nvar generateListeningSequenceBar = (columns) => {\n  const center = Math.floor(columns / 2);\n  const noIndex = -1;\n  return [[center], [noIndex]];\n};\n\n// src/components/participant/animators/useBarAnimator.ts\nvar useBarAnimator = (state, columns, interval) => {\n  const [index, setIndex] = useState22(0);\n  const [sequence, setSequence] = useState22([[]]);\n  useEffect27(() => {\n    if (state === \"thinking\") {\n      setSequence(generateListeningSequenceBar(columns));\n    } else if (state === \"connecting\" || state === \"initializing\") {\n      const sequence2 = [...generateConnectingSequenceBar(columns)];\n      setSequence(sequence2);\n    } else if (state === \"listening\") {\n      setSequence(generateListeningSequenceBar(columns));\n    } else if (state === void 0) {\n      setSequence([new Array(columns).fill(0).map((_, idx) => idx)]);\n    } else {\n      setSequence([[]]);\n    }\n    setIndex(0);\n  }, [state, columns]);\n  const animationFrameId = useRef10(null);\n  useEffect27(() => {\n    let startTime = performance.now();\n    const animate = (time) => {\n      const timeElapsed = time - startTime;\n      if (timeElapsed >= interval) {\n        setIndex((prev) => prev + 1);\n        startTime = time;\n      }\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n    animationFrameId.current = requestAnimationFrame(animate);\n    return () => {\n      if (animationFrameId.current !== null) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n    };\n  }, [interval, columns, state, sequence.length]);\n  return sequence[index % sequence.length];\n};\n\n// src/components/participant/BarVisualizer.tsx\nvar sequencerIntervals = /* @__PURE__ */ new Map([\n  [\"connecting\", 25 * 15],\n  [\"listening\", 500],\n  [\"thinking\", 150]\n]);\nvar getSequencerInterval = (state, barCount) => {\n  if (state === void 0) {\n    return 1e3;\n  }\n  let interval = sequencerIntervals.get(state);\n  if (interval) {\n    switch (state) {\n      case \"connecting\":\n        interval /= barCount;\n        break;\n      default:\n        break;\n    }\n  }\n  return interval;\n};\nvar BarVisualizer = /* @__PURE__ */ React106.forwardRef(\n  function BarVisualizer2(_a, ref) {\n    var _b = _a, { state, options, barCount = 15, trackRef } = _b, props = __objRest(_b, [\"state\", \"options\", \"barCount\", \"trackRef\"]);\n    var _a2, _b2, _c;\n    const elementProps = mergeProps2(props, { className: \"lk-audio-bar-visualizer\" });\n    let trackReference = useMaybeTrackRefContext();\n    if (trackRef) {\n      trackReference = trackRef;\n    }\n    const volumeBands = useMultibandTrackVolume(trackReference, {\n      bands: barCount,\n      loPass: 100,\n      hiPass: 200\n    });\n    const minHeight = (_a2 = options == null ? void 0 : options.minHeight) != null ? _a2 : 20;\n    const maxHeight = (_b2 = options == null ? void 0 : options.maxHeight) != null ? _b2 : 100;\n    const highlightedIndices = useBarAnimator(\n      state,\n      barCount,\n      (_c = getSequencerInterval(state, barCount)) != null ? _c : 100\n    );\n    return /* @__PURE__ */ React106.createElement(\"div\", __spreadProps(__spreadValues({ ref }, elementProps), { \"data-lk-va-state\": state }), volumeBands.map((volume, idx) => /* @__PURE__ */ React106.createElement(\n      \"span\",\n      {\n        key: idx,\n        className: `lk-audio-bar ${highlightedIndices.includes(idx) && \"lk-highlighted\"}`,\n        style: {\n          // TODO transform animations would be more performant, however the border-radius gets distorted when using scale transforms. a 9-slice approach (or 3 in this case) could work\n          // transform: `scale(1, ${Math.min(maxHeight, Math.max(minHeight, volume))}`,\n          height: `${Math.min(maxHeight, Math.max(minHeight, volume * 100 + 5))}%`\n        }\n      }\n    )));\n  }\n);\n\n// src/components/participant/ParticipantAudioTile.tsx\nvar ParticipantAudioTile = /* @__PURE__ */ React107.forwardRef(\n  function ParticipantAudioTile2(_a, ref) {\n    var _b = _a, {\n      children,\n      disableSpeakingIndicator,\n      onParticipantClick,\n      trackRef\n    } = _b, htmlProps = __objRest(_b, [\n      \"children\",\n      \"disableSpeakingIndicator\",\n      \"onParticipantClick\",\n      \"trackRef\"\n    ]);\n    const trackReference = useEnsureTrackRef(trackRef);\n    const { elementProps } = useParticipantTile({\n      trackRef: trackReference,\n      htmlProps,\n      disableSpeakingIndicator,\n      onParticipantClick\n    });\n    return /* @__PURE__ */ React107.createElement(\"div\", __spreadValues({ ref, style: { position: \"relative\", minHeight: \"160px\" } }, elementProps), /* @__PURE__ */ React107.createElement(TrackRefContext.Provider, { value: trackReference }, children != null ? children : /* @__PURE__ */ React107.createElement(React107.Fragment, null, isTrackReference4(trackReference) && /* @__PURE__ */ React107.createElement(AudioTrack, { trackRef: trackReference }), /* @__PURE__ */ React107.createElement(BarVisualizer, { barCount: 7, options: { minHeight: 8 } }), /* @__PURE__ */ React107.createElement(\"div\", { className: \"lk-participant-metadata\" }, /* @__PURE__ */ React107.createElement(\"div\", { className: \"lk-participant-metadata-item\" }, /* @__PURE__ */ React107.createElement(TrackMutedIndicator, { trackRef: trackReference }), /* @__PURE__ */ React107.createElement(ParticipantName, null)), /* @__PURE__ */ React107.createElement(ConnectionQualityIndicator, { className: \"lk-participant-metadata-item\" })))));\n  }\n);\n\n// src/components/ConnectionStateToast.tsx\nimport { ConnectionState as ConnectionState7 } from \"livekit-client\";\nimport * as React108 from \"react\";\nfunction ConnectionStateToast(props) {\n  const [notification, setNotification] = React108.useState(void 0);\n  const state = useConnectionState(props.room);\n  React108.useEffect(() => {\n    switch (state) {\n      case ConnectionState7.Reconnecting:\n        setNotification(\n          /* @__PURE__ */ React108.createElement(React108.Fragment, null, /* @__PURE__ */ React108.createElement(SpinnerIcon_default, { className: \"lk-spinner\" }), \" Reconnecting\")\n        );\n        break;\n      case ConnectionState7.Connecting:\n        setNotification(\n          /* @__PURE__ */ React108.createElement(React108.Fragment, null, /* @__PURE__ */ React108.createElement(SpinnerIcon_default, { className: \"lk-spinner\" }), \" Connecting\")\n        );\n        break;\n      case ConnectionState7.Disconnected:\n        setNotification(/* @__PURE__ */ React108.createElement(React108.Fragment, null, \"Disconnected\"));\n        break;\n      default:\n        setNotification(void 0);\n        break;\n    }\n  }, [state]);\n  return notification ? /* @__PURE__ */ React108.createElement(Toast, { className: \"lk-toast-connection-state\" }, notification) : /* @__PURE__ */ React108.createElement(React108.Fragment, null);\n}\n\n// src/components/ChatEntry.tsx\nimport { tokenize, createDefaultGrammar } from \"@livekit/components-core\";\nimport * as React109 from \"react\";\nvar ChatEntry = /* @__PURE__ */ React109.forwardRef(\n  function ChatEntry2(_a, ref) {\n    var _b = _a, { entry, hideName = false, hideTimestamp = false, messageFormatter } = _b, props = __objRest(_b, [\"entry\", \"hideName\", \"hideTimestamp\", \"messageFormatter\"]);\n    var _a2, _b2, _c, _d;\n    const formattedMessage = React109.useMemo(() => {\n      return messageFormatter ? messageFormatter(entry.message) : entry.message;\n    }, [entry.message, messageFormatter]);\n    const hasBeenEdited = !!entry.editTimestamp;\n    const time = new Date(entry.timestamp);\n    const locale = navigator ? navigator.language : \"en-US\";\n    return /* @__PURE__ */ React109.createElement(\n      \"li\",\n      __spreadValues({\n        ref,\n        className: \"lk-chat-entry\",\n        title: time.toLocaleTimeString(locale, { timeStyle: \"full\" }),\n        \"data-lk-message-origin\": ((_a2 = entry.from) == null ? void 0 : _a2.isLocal) ? \"local\" : \"remote\"\n      }, props),\n      (!hideTimestamp || !hideName || hasBeenEdited) && /* @__PURE__ */ React109.createElement(\"span\", { className: \"lk-meta-data\" }, !hideName && /* @__PURE__ */ React109.createElement(\"strong\", { className: \"lk-participant-name\" }, (_d = (_b2 = entry.from) == null ? void 0 : _b2.name) != null ? _d : (_c = entry.from) == null ? void 0 : _c.identity), (!hideTimestamp || hasBeenEdited) && /* @__PURE__ */ React109.createElement(\"span\", { className: \"lk-timestamp\" }, hasBeenEdited && \"edited \", time.toLocaleTimeString(locale, { timeStyle: \"short\" }))),\n      /* @__PURE__ */ React109.createElement(\"span\", { className: \"lk-message-body\" }, formattedMessage)\n    );\n  }\n);\nfunction formatChatMessageLinks(message) {\n  return tokenize(message, createDefaultGrammar()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href = tok.type === `url` ? /^http(s?):\\/\\//.test(content) ? content : `https://${content}` : `mailto:${content}`;\n      return /* @__PURE__ */ React109.createElement(\"a\", { className: \"lk-chat-link\", key: i, href, target: \"_blank\", rel: \"noreferrer\" }, content);\n    }\n  });\n}\n\n// src/prefabs/Chat.tsx\nimport * as React110 from \"react\";\nfunction Chat(_a) {\n  var _b = _a, {\n    messageFormatter,\n    messageDecoder,\n    messageEncoder,\n    channelTopic\n  } = _b, props = __objRest(_b, [\n    \"messageFormatter\",\n    \"messageDecoder\",\n    \"messageEncoder\",\n    \"channelTopic\"\n  ]);\n  const inputRef = React110.useRef(null);\n  const ulRef = React110.useRef(null);\n  const chatOptions = React110.useMemo(() => {\n    return { messageDecoder, messageEncoder, channelTopic };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n  const { send, chatMessages, isSending } = useChat(chatOptions);\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = React110.useRef(0);\n  function handleSubmit(event) {\n    return __async(this, null, function* () {\n      event.preventDefault();\n      if (inputRef.current && inputRef.current.value.trim() !== \"\") {\n        if (send) {\n          yield send(inputRef.current.value);\n          inputRef.current.value = \"\";\n          inputRef.current.focus();\n        }\n      }\n    });\n  }\n  React110.useEffect(() => {\n    var _a2;\n    if (ulRef) {\n      (_a2 = ulRef.current) == null ? void 0 : _a2.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n  React110.useEffect(() => {\n    var _a2, _b2, _c, _d, _e;\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n    if (((_a2 = layoutContext.widget.state) == null ? void 0 : _a2.showChat) && chatMessages.length > 0 && lastReadMsgAt.current !== ((_b2 = chatMessages[chatMessages.length - 1]) == null ? void 0 : _b2.timestamp)) {\n      lastReadMsgAt.current = (_c = chatMessages[chatMessages.length - 1]) == null ? void 0 : _c.timestamp;\n      return;\n    }\n    const unreadMessageCount = chatMessages.filter(\n      (msg) => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current\n    ).length;\n    const { widget } = layoutContext;\n    if (unreadMessageCount > 0 && ((_d = widget.state) == null ? void 0 : _d.unreadMessages) !== unreadMessageCount) {\n      (_e = widget.dispatch) == null ? void 0 : _e.call(widget, { msg: \"unread_msg\", count: unreadMessageCount });\n    }\n  }, [chatMessages, layoutContext == null ? void 0 : layoutContext.widget]);\n  return /* @__PURE__ */ React110.createElement(\"div\", __spreadProps(__spreadValues({}, props), { className: \"lk-chat\" }), /* @__PURE__ */ React110.createElement(\"div\", { className: \"lk-chat-header\" }, \"Messages\", /* @__PURE__ */ React110.createElement(ChatToggle, { className: \"lk-close-button\" }, /* @__PURE__ */ React110.createElement(ChatCloseIcon_default, null))), /* @__PURE__ */ React110.createElement(\"ul\", { className: \"lk-list lk-chat-messages\", ref: ulRef }, props.children ? chatMessages.map(\n    (msg, idx) => {\n      var _a2;\n      return cloneSingleChild(props.children, {\n        entry: msg,\n        key: (_a2 = msg.id) != null ? _a2 : idx,\n        messageFormatter\n      });\n    }\n  ) : chatMessages.map((msg, idx, allMsg) => {\n    var _a2;\n    const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n    const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 6e4;\n    return /* @__PURE__ */ React110.createElement(\n      ChatEntry,\n      {\n        key: (_a2 = msg.id) != null ? _a2 : idx,\n        hideName,\n        hideTimestamp: hideName === false ? false : hideTimestamp,\n        entry: msg,\n        messageFormatter\n      }\n    );\n  })), /* @__PURE__ */ React110.createElement(\"form\", { className: \"lk-chat-form\", onSubmit: handleSubmit }, /* @__PURE__ */ React110.createElement(\n    \"input\",\n    {\n      className: \"lk-form-control lk-chat-form-input\",\n      disabled: isSending,\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Enter a message...\",\n      onInput: (ev) => ev.stopPropagation(),\n      onKeyDown: (ev) => ev.stopPropagation(),\n      onKeyUp: (ev) => ev.stopPropagation()\n    }\n  ), /* @__PURE__ */ React110.createElement(\"button\", { type: \"submit\", className: \"lk-button lk-chat-form-button\", disabled: isSending }, \"Send\")));\n}\n\n// src/prefabs/PreJoin.tsx\nimport {\n  createLocalAudioTrack,\n  createLocalTracks,\n  createLocalVideoTrack,\n  facingModeFromLocalTrack as facingModeFromLocalTrack2,\n  Track as Track9,\n  VideoPresets,\n  Mutex\n} from \"livekit-client\";\nimport * as React113 from \"react\";\n\n// src/prefabs/MediaDeviceMenu.tsx\nimport { computeMenuPosition, wasClickOutside } from \"@livekit/components-core\";\nimport * as React111 from \"react\";\nimport { log as log11 } from \"@livekit/components-core\";\nfunction MediaDeviceMenu(_a) {\n  var _b = _a, {\n    kind,\n    initialSelection,\n    onActiveDeviceChange,\n    tracks,\n    requestPermissions = false\n  } = _b, props = __objRest(_b, [\n    \"kind\",\n    \"initialSelection\",\n    \"onActiveDeviceChange\",\n    \"tracks\",\n    \"requestPermissions\"\n  ]);\n  const [isOpen, setIsOpen] = React111.useState(false);\n  const [devices, setDevices] = React111.useState([]);\n  const [updateRequired, setUpdateRequired] = React111.useState(true);\n  const [needPermissions, setNeedPermissions] = React111.useState(requestPermissions);\n  const handleActiveDeviceChange = (kind2, deviceId) => {\n    log11.debug(\"handle device change\");\n    setIsOpen(false);\n    onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(kind2, deviceId);\n  };\n  const button = React111.useRef(null);\n  const tooltip = React111.useRef(null);\n  React111.useLayoutEffect(() => {\n    if (isOpen) {\n      setNeedPermissions(true);\n    }\n  }, [isOpen]);\n  React111.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      computeMenuPosition(button.current, tooltip.current).then(({ x, y }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n  const handleClickOutside = React111.useCallback(\n    (event) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && wasClickOutside(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button]\n  );\n  React111.useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    window.addEventListener(\"resize\", () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n      window.removeEventListener(\"resize\", () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n  return /* @__PURE__ */ React111.createElement(React111.Fragment, null, /* @__PURE__ */ React111.createElement(\n    \"button\",\n    __spreadProps(__spreadValues({\n      className: \"lk-button lk-button-menu\",\n      \"aria-pressed\": isOpen\n    }, props), {\n      onClick: () => setIsOpen(!isOpen),\n      ref: button\n    }),\n    props.children\n  ), !props.disabled && /* @__PURE__ */ React111.createElement(\n    \"div\",\n    {\n      className: \"lk-device-menu\",\n      ref: tooltip,\n      style: { visibility: isOpen ? \"visible\" : \"hidden\" }\n    },\n    kind ? /* @__PURE__ */ React111.createElement(\n      MediaDeviceSelect,\n      {\n        initialSelection,\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(kind, deviceId),\n        onDeviceListChange: setDevices,\n        kind,\n        track: tracks == null ? void 0 : tracks[kind],\n        requestPermissions: needPermissions\n      }\n    ) : /* @__PURE__ */ React111.createElement(React111.Fragment, null, /* @__PURE__ */ React111.createElement(\"div\", { className: \"lk-device-menu-heading\" }, \"Audio inputs\"), /* @__PURE__ */ React111.createElement(\n      MediaDeviceSelect,\n      {\n        kind: \"audioinput\",\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(\"audioinput\", deviceId),\n        onDeviceListChange: setDevices,\n        track: tracks == null ? void 0 : tracks.audioinput,\n        requestPermissions: needPermissions\n      }\n    ), /* @__PURE__ */ React111.createElement(\"div\", { className: \"lk-device-menu-heading\" }, \"Video inputs\"), /* @__PURE__ */ React111.createElement(\n      MediaDeviceSelect,\n      {\n        kind: \"videoinput\",\n        onActiveDeviceChange: (deviceId) => handleActiveDeviceChange(\"videoinput\", deviceId),\n        onDeviceListChange: setDevices,\n        track: tracks == null ? void 0 : tracks.videoinput,\n        requestPermissions: needPermissions\n      }\n    ))\n  ));\n}\n\n// src/prefabs/PreJoin.tsx\nimport { log as log12 } from \"@livekit/components-core\";\n\n// src/hooks/useWarnAboutMissingStyles.ts\nimport * as React112 from \"react\";\nfunction useWarnAboutMissingStyles() {\n  React112.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n\n// src/prefabs/PreJoin.tsx\nimport { defaultUserChoices } from \"@livekit/components-core\";\nfunction usePreviewTracks(options, onError) {\n  const [tracks, setTracks] = React113.useState();\n  const trackLock = React113.useMemo(() => new Mutex(), []);\n  React113.useEffect(() => {\n    let needsCleanup = false;\n    let localTracks = [];\n    trackLock.lock().then((unlock) => __async(this, null, function* () {\n      try {\n        if (options.audio || options.video) {\n          localTracks = yield createLocalTracks(options);\n          if (needsCleanup) {\n            localTracks.forEach((tr) => tr.stop());\n          } else {\n            setTracks(localTracks);\n          }\n        }\n      } catch (e) {\n        if (onError && e instanceof Error) {\n          onError(e);\n        } else {\n          log12.error(e);\n        }\n      } finally {\n        unlock();\n      }\n    }));\n    return () => {\n      needsCleanup = true;\n      localTracks.forEach((track) => {\n        track.stop();\n      });\n    };\n  }, [JSON.stringify(options), onError, trackLock]);\n  return tracks;\n}\nfunction usePreviewDevice(enabled, deviceId, kind) {\n  const [deviceError, setDeviceError] = React113.useState(null);\n  const [isCreatingTrack, setIsCreatingTrack] = React113.useState(false);\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = React113.useState(\n    void 0\n  );\n  const [localTrack, setLocalTrack] = React113.useState();\n  const [localDeviceId, setLocalDeviceId] = React113.useState(deviceId);\n  React113.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n  const createTrack = (deviceId2, kind2) => __async(this, null, function* () {\n    try {\n      const track = kind2 === \"videoinput\" ? yield createLocalVideoTrack({\n        deviceId: deviceId2,\n        resolution: VideoPresets.h720.resolution\n      }) : yield createLocalAudioTrack({ deviceId: deviceId2 });\n      const newDeviceId = yield track.getDeviceId();\n      if (newDeviceId && deviceId2 !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  });\n  const switchDevice = (track, id) => __async(this, null, function* () {\n    yield track.setDeviceId(id);\n    prevDeviceId.current = id;\n  });\n  const prevDeviceId = React113.useRef(localDeviceId);\n  React113.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      log12.debug(\"creating track\", kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n  React113.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      log12.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => log12.debug(localTrack.mediaStreamTrack));\n    } else if ((selectedDevice == null ? void 0 : selectedDevice.deviceId) && prevDeviceId.current !== (selectedDevice == null ? void 0 : selectedDevice.deviceId)) {\n      log12.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log12.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n  React113.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        log12.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n  React113.useEffect(() => {\n    setSelectedDevice(devices == null ? void 0 : devices.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError\n  };\n}\nfunction PreJoin(_a) {\n  var _b = _a, {\n    defaults = {},\n    onValidate,\n    onSubmit,\n    onError,\n    debug,\n    joinLabel = \"Join Room\",\n    micLabel = \"Microphone\",\n    camLabel = \"Camera\",\n    userLabel = \"Username\",\n    persistUserChoices = true\n  } = _b, htmlProps = __objRest(_b, [\n    \"defaults\",\n    \"onValidate\",\n    \"onSubmit\",\n    \"onError\",\n    \"debug\",\n    \"joinLabel\",\n    \"micLabel\",\n    \"camLabel\",\n    \"userLabel\",\n    \"persistUserChoices\"\n  ]);\n  const [userChoices, setUserChoices] = React113.useState(defaultUserChoices);\n  const partialDefaults = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, defaults.audioDeviceId !== void 0 && { audioDeviceId: defaults.audioDeviceId }), defaults.videoDeviceId !== void 0 && { videoDeviceId: defaults.videoDeviceId }), defaults.audioEnabled !== void 0 && { audioEnabled: defaults.audioEnabled }), defaults.videoEnabled !== void 0 && { videoEnabled: defaults.videoEnabled }), defaults.username !== void 0 && { username: defaults.username });\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername\n  } = usePersistentUserChoices({\n    defaults: partialDefaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices\n  });\n  const [audioEnabled, setAudioEnabled] = React113.useState(initialUserChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = React113.useState(initialUserChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = React113.useState(\n    initialUserChoices.audioDeviceId\n  );\n  const [videoDeviceId, setVideoDeviceId] = React113.useState(\n    initialUserChoices.videoDeviceId\n  );\n  const [username, setUsername] = React113.useState(initialUserChoices.username);\n  React113.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  React113.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  React113.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  React113.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  React113.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n  const tracks = usePreviewTracks(\n    {\n      audio: audioEnabled ? { deviceId: initialUserChoices.audioDeviceId } : false,\n      video: videoEnabled ? { deviceId: initialUserChoices.videoDeviceId } : false\n    },\n    onError\n  );\n  const videoEl = React113.useRef(null);\n  const videoTrack = React113.useMemo(\n    () => tracks == null ? void 0 : tracks.filter((track) => track.kind === Track9.Kind.Video)[0],\n    [tracks]\n  );\n  const facingMode = React113.useMemo(() => {\n    if (videoTrack) {\n      const { facingMode: facingMode2 } = facingModeFromLocalTrack2(videoTrack);\n      return facingMode2;\n    } else {\n      return \"undefined\";\n    }\n  }, [videoTrack]);\n  const audioTrack = React113.useMemo(\n    () => tracks == null ? void 0 : tracks.filter((track) => track.kind === Track9.Kind.Audio)[0],\n    [tracks]\n  );\n  React113.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n    return () => {\n      videoTrack == null ? void 0 : videoTrack.detach();\n    };\n  }, [videoTrack]);\n  const [isValid, setIsValid] = React113.useState();\n  const handleValidation = React113.useCallback(\n    (values) => {\n      if (typeof onValidate === \"function\") {\n        return onValidate(values);\n      } else {\n        return values.username !== \"\";\n      }\n    },\n    [onValidate]\n  );\n  React113.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [username, videoEnabled, handleValidation, audioEnabled, audioDeviceId, videoDeviceId]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === \"function\") {\n        onSubmit(userChoices);\n      }\n    } else {\n      log12.warn(\"Validation failed with: \", userChoices);\n    }\n  }\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ React113.createElement(\"div\", __spreadValues({ className: \"lk-prejoin\" }, htmlProps), /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-video-container\" }, videoTrack && /* @__PURE__ */ React113.createElement(\"video\", { ref: videoEl, width: \"1280\", height: \"720\", \"data-lk-facing-mode\": facingMode }), (!videoTrack || !videoEnabled) && /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-camera-off-note\" }, /* @__PURE__ */ React113.createElement(ParticipantPlaceholder_default, null))), /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-button-group-container\" }, /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-button-group audio\" }, /* @__PURE__ */ React113.createElement(\n    TrackToggle,\n    {\n      initialState: audioEnabled,\n      source: Track9.Source.Microphone,\n      onChange: (enabled) => setAudioEnabled(enabled)\n    },\n    micLabel\n  ), /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ React113.createElement(\n    MediaDeviceMenu,\n    {\n      initialSelection: audioDeviceId,\n      kind: \"audioinput\",\n      disabled: !audioTrack,\n      tracks: { audioinput: audioTrack },\n      onActiveDeviceChange: (_, id) => setAudioDeviceId(id)\n    }\n  ))), /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-button-group video\" }, /* @__PURE__ */ React113.createElement(\n    TrackToggle,\n    {\n      initialState: videoEnabled,\n      source: Track9.Source.Camera,\n      onChange: (enabled) => setVideoEnabled(enabled)\n    },\n    camLabel\n  ), /* @__PURE__ */ React113.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ React113.createElement(\n    MediaDeviceMenu,\n    {\n      initialSelection: videoDeviceId,\n      kind: \"videoinput\",\n      disabled: !videoTrack,\n      tracks: { videoinput: videoTrack },\n      onActiveDeviceChange: (_, id) => setVideoDeviceId(id)\n    }\n  )))), /* @__PURE__ */ React113.createElement(\"form\", { className: \"lk-username-container\" }, /* @__PURE__ */ React113.createElement(\n    \"input\",\n    {\n      className: \"lk-form-control\",\n      id: \"username\",\n      name: \"username\",\n      type: \"text\",\n      defaultValue: username,\n      placeholder: userLabel,\n      onChange: (inputEl) => setUsername(inputEl.target.value),\n      autoComplete: \"off\"\n    }\n  ), /* @__PURE__ */ React113.createElement(\n    \"button\",\n    {\n      className: \"lk-button lk-join-button\",\n      type: \"submit\",\n      onClick: handleSubmit,\n      disabled: !isValid\n    },\n    joinLabel\n  )), debug && /* @__PURE__ */ React113.createElement(React113.Fragment, null, /* @__PURE__ */ React113.createElement(\"strong\", null, \"User Choices:\"), /* @__PURE__ */ React113.createElement(\"ul\", { className: \"lk-list\", style: { overflow: \"hidden\", maxWidth: \"15rem\" } }, /* @__PURE__ */ React113.createElement(\"li\", null, \"Username: \", `${userChoices.username}`), /* @__PURE__ */ React113.createElement(\"li\", null, \"Video Enabled: \", `${userChoices.videoEnabled}`), /* @__PURE__ */ React113.createElement(\"li\", null, \"Audio Enabled: \", `${userChoices.audioEnabled}`), /* @__PURE__ */ React113.createElement(\"li\", null, \"Video Device: \", `${userChoices.videoDeviceId}`), /* @__PURE__ */ React113.createElement(\"li\", null, \"Audio Device: \", `${userChoices.audioDeviceId}`))));\n}\n\n// src/prefabs/VideoConference.tsx\nimport { isEqualTrackRef, isTrackReference as isTrackReference5, isWeb, log as log13 } from \"@livekit/components-core\";\nimport { RoomEvent as RoomEvent3, Track as Track11 } from \"livekit-client\";\nimport * as React118 from \"react\";\n\n// src/prefabs/ControlBar.tsx\nimport { Track as Track10 } from \"livekit-client\";\nimport * as React117 from \"react\";\nimport { supportsScreenSharing } from \"@livekit/components-core\";\n\n// src/components/controls/StartMediaButton.tsx\nimport * as React114 from \"react\";\nvar StartMediaButton = /* @__PURE__ */ React114.forwardRef(\n  function StartMediaButton2(_a, ref) {\n    var _b = _a, { label } = _b, props = __objRest(_b, [\"label\"]);\n    const room = useRoomContext();\n    const { mergedProps: audioProps, canPlayAudio } = useStartAudio({ room, props });\n    const { mergedProps, canPlayVideo } = useStartVideo({ room, props: audioProps });\n    const _a2 = mergedProps, { style } = _a2, restProps = __objRest(_a2, [\"style\"]);\n    style.display = canPlayAudio && canPlayVideo ? \"none\" : \"block\";\n    return /* @__PURE__ */ React114.createElement(\"button\", __spreadValues({ ref, style }, restProps), label != null ? label : `Start ${!canPlayAudio ? \"Audio\" : \"Video\"}`);\n  }\n);\n\n// src/components/controls/SettingsMenuToggle.tsx\nimport * as React116 from \"react\";\n\n// src/hooks/useSettingsToggle.ts\nimport * as React115 from \"react\";\nfunction useSettingsToggle({ props }) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const className = \"lk-button lk-settings-toggle\";\n  const mergedProps = React115.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: \"toggle_settings\" });\n      },\n      \"aria-pressed\": (state == null ? void 0 : state.showSettings) ? \"true\" : \"false\"\n    });\n  }, [props, className, dispatch, state]);\n  return { mergedProps };\n}\n\n// src/components/controls/SettingsMenuToggle.tsx\nvar SettingsMenuToggle = /* @__PURE__ */ React116.forwardRef(\n  function SettingsMenuToggle2(props, ref) {\n    const { mergedProps } = useSettingsToggle({ props });\n    return /* @__PURE__ */ React116.createElement(\"button\", __spreadValues({ ref }, mergedProps), props.children);\n  }\n);\n\n// src/prefabs/ControlBar.tsx\nfunction ControlBar(_a) {\n  var _b = _a, {\n    variation,\n    controls,\n    saveUserChoices: saveUserChoices2 = true,\n    onDeviceError\n  } = _b, props = __objRest(_b, [\n    \"variation\",\n    \"controls\",\n    \"saveUserChoices\",\n    \"onDeviceError\"\n  ]);\n  var _a2, _b2, _c, _d, _e;\n  const [isChatOpen, setIsChatOpen] = React117.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  React117.useEffect(() => {\n    var _a3, _b3;\n    if (((_a3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a3.showChat) !== void 0) {\n      setIsChatOpen((_b3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _b3.showChat);\n    }\n  }, [(_a2 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a2.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1e3 : 760}px)`);\n  const defaultVariation = isTooLittleSpace ? \"minimal\" : \"verbose\";\n  variation != null ? variation : variation = defaultVariation;\n  const visibleControls = __spreadValues({ leave: true }, controls);\n  const localPermissions = useLocalParticipantPermissions();\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    (_b2 = visibleControls.camera) != null ? _b2 : visibleControls.camera = localPermissions.canPublish;\n    (_c = visibleControls.microphone) != null ? _c : visibleControls.microphone = localPermissions.canPublish;\n    (_d = visibleControls.screenShare) != null ? _d : visibleControls.screenShare = localPermissions.canPublish;\n    (_e = visibleControls.chat) != null ? _e : visibleControls.chat = localPermissions.canPublishData && (controls == null ? void 0 : controls.chat);\n  }\n  const showIcon = React117.useMemo(\n    () => variation === \"minimal\" || variation === \"verbose\",\n    [variation]\n  );\n  const showText = React117.useMemo(\n    () => variation === \"textOnly\" || variation === \"verbose\",\n    [variation]\n  );\n  const browserSupportsScreenSharing = supportsScreenSharing();\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React117.useState(false);\n  const onScreenShareChange = React117.useCallback(\n    (enabled) => {\n      setIsScreenShareEnabled(enabled);\n    },\n    [setIsScreenShareEnabled]\n  );\n  const htmlProps = mergeProps2({ className: \"lk-control-bar\" }, props);\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId\n  } = usePersistentUserChoices({ preventSave: !saveUserChoices2 });\n  const microphoneOnChange = React117.useCallback(\n    (enabled, isUserInitiated) => isUserInitiated ? saveAudioInputEnabled(enabled) : null,\n    [saveAudioInputEnabled]\n  );\n  const cameraOnChange = React117.useCallback(\n    (enabled, isUserInitiated) => isUserInitiated ? saveVideoInputEnabled(enabled) : null,\n    [saveVideoInputEnabled]\n  );\n  return /* @__PURE__ */ React117.createElement(\"div\", __spreadValues({}, htmlProps), visibleControls.microphone && /* @__PURE__ */ React117.createElement(\"div\", { className: \"lk-button-group\" }, /* @__PURE__ */ React117.createElement(\n    TrackToggle,\n    {\n      source: Track10.Source.Microphone,\n      showIcon,\n      onChange: microphoneOnChange,\n      onDeviceError: (error) => onDeviceError == null ? void 0 : onDeviceError({ source: Track10.Source.Microphone, error })\n    },\n    showText && \"Microphone\"\n  ), /* @__PURE__ */ React117.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ React117.createElement(\n    MediaDeviceMenu,\n    {\n      kind: \"audioinput\",\n      onActiveDeviceChange: (_kind, deviceId) => saveAudioInputDeviceId(deviceId != null ? deviceId : \"\")\n    }\n  ))), visibleControls.camera && /* @__PURE__ */ React117.createElement(\"div\", { className: \"lk-button-group\" }, /* @__PURE__ */ React117.createElement(\n    TrackToggle,\n    {\n      source: Track10.Source.Camera,\n      showIcon,\n      onChange: cameraOnChange,\n      onDeviceError: (error) => onDeviceError == null ? void 0 : onDeviceError({ source: Track10.Source.Camera, error })\n    },\n    showText && \"Camera\"\n  ), /* @__PURE__ */ React117.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ React117.createElement(\n    MediaDeviceMenu,\n    {\n      kind: \"videoinput\",\n      onActiveDeviceChange: (_kind, deviceId) => saveVideoInputDeviceId(deviceId != null ? deviceId : \"\")\n    }\n  ))), visibleControls.screenShare && browserSupportsScreenSharing && /* @__PURE__ */ React117.createElement(\n    TrackToggle,\n    {\n      source: Track10.Source.ScreenShare,\n      captureOptions: { audio: true, selfBrowserSurface: \"include\" },\n      showIcon,\n      onChange: onScreenShareChange,\n      onDeviceError: (error) => onDeviceError == null ? void 0 : onDeviceError({ source: Track10.Source.ScreenShare, error })\n    },\n    showText && (isScreenShareEnabled ? \"Stop screen share\" : \"Share screen\")\n  ), visibleControls.chat && /* @__PURE__ */ React117.createElement(ChatToggle, null, showIcon && /* @__PURE__ */ React117.createElement(ChatIcon_default, null), showText && \"Chat\"), visibleControls.settings && /* @__PURE__ */ React117.createElement(SettingsMenuToggle, null, showIcon && /* @__PURE__ */ React117.createElement(GearIcon_default, null), showText && \"Settings\"), visibleControls.leave && /* @__PURE__ */ React117.createElement(DisconnectButton, null, showIcon && /* @__PURE__ */ React117.createElement(LeaveIcon_default, null), showText && \"Leave\"), /* @__PURE__ */ React117.createElement(StartMediaButton, null));\n}\n\n// src/prefabs/VideoConference.tsx\nfunction VideoConference(_a) {\n  var _b = _a, {\n    chatMessageFormatter,\n    chatMessageDecoder,\n    chatMessageEncoder,\n    SettingsComponent\n  } = _b, props = __objRest(_b, [\n    \"chatMessageFormatter\",\n    \"chatMessageDecoder\",\n    \"chatMessageEncoder\",\n    \"SettingsComponent\"\n  ]);\n  var _a2, _b2;\n  const [widgetState, setWidgetState] = React118.useState({\n    showChat: false,\n    unreadMessages: 0,\n    showSettings: false\n  });\n  const lastAutoFocusedScreenShareTrack = React118.useRef(null);\n  const tracks = useTracks(\n    [\n      { source: Track11.Source.Camera, withPlaceholder: true },\n      { source: Track11.Source.ScreenShare, withPlaceholder: false }\n    ],\n    { updateOnlyOn: [RoomEvent3.ActiveSpeakersChanged], onlySubscribed: false }\n  );\n  const widgetUpdate = (state) => {\n    log13.debug(\"updating widget state\", state);\n    setWidgetState(state);\n  };\n  const layoutContext = useCreateLayoutContext();\n  const screenShareTracks = tracks.filter(isTrackReference5).filter((track) => track.publication.source === Track11.Source.ScreenShare);\n  const focusTrack = (_a2 = usePinnedTracks(layoutContext)) == null ? void 0 : _a2[0];\n  const carouselTracks = tracks.filter((track) => !isEqualTrackRef(track, focusTrack));\n  React118.useEffect(() => {\n    var _a3, _b3, _c, _d, _e, _f;\n    if (screenShareTracks.some((track) => track.publication.isSubscribed) && lastAutoFocusedScreenShareTrack.current === null) {\n      log13.debug(\"Auto set screen share focus:\", { newScreenShareTrack: screenShareTracks[0] });\n      (_b3 = (_a3 = layoutContext.pin).dispatch) == null ? void 0 : _b3.call(_a3, { msg: \"set_pin\", trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (lastAutoFocusedScreenShareTrack.current && !screenShareTracks.some(\n      (track) => {\n        var _a4, _b4;\n        return track.publication.trackSid === ((_b4 = (_a4 = lastAutoFocusedScreenShareTrack.current) == null ? void 0 : _a4.publication) == null ? void 0 : _b4.trackSid);\n      }\n    )) {\n      log13.debug(\"Auto clearing screen share focus.\");\n      (_d = (_c = layoutContext.pin).dispatch) == null ? void 0 : _d.call(_c, { msg: \"clear_pin\" });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n    if (focusTrack && !isTrackReference5(focusTrack)) {\n      const updatedFocusTrack = tracks.find(\n        (tr) => tr.participant.identity === focusTrack.participant.identity && tr.source === focusTrack.source\n      );\n      if (updatedFocusTrack !== focusTrack && isTrackReference5(updatedFocusTrack)) {\n        (_f = (_e = layoutContext.pin).dispatch) == null ? void 0 : _f.call(_e, { msg: \"set_pin\", trackReference: updatedFocusTrack });\n      }\n    }\n  }, [\n    screenShareTracks.map((ref) => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`).join(),\n    (_b2 = focusTrack == null ? void 0 : focusTrack.publication) == null ? void 0 : _b2.trackSid,\n    tracks\n  ]);\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ React118.createElement(\"div\", __spreadValues({ className: \"lk-video-conference\" }, props), isWeb() && /* @__PURE__ */ React118.createElement(\n    LayoutContextProvider,\n    {\n      value: layoutContext,\n      onWidgetChange: widgetUpdate\n    },\n    /* @__PURE__ */ React118.createElement(\"div\", { className: \"lk-video-conference-inner\" }, !focusTrack ? /* @__PURE__ */ React118.createElement(\"div\", { className: \"lk-grid-layout-wrapper\" }, /* @__PURE__ */ React118.createElement(GridLayout, { tracks }, /* @__PURE__ */ React118.createElement(ParticipantTile, null))) : /* @__PURE__ */ React118.createElement(\"div\", { className: \"lk-focus-layout-wrapper\" }, /* @__PURE__ */ React118.createElement(FocusLayoutContainer, null, /* @__PURE__ */ React118.createElement(CarouselLayout, { tracks: carouselTracks }, /* @__PURE__ */ React118.createElement(ParticipantTile, null)), focusTrack && /* @__PURE__ */ React118.createElement(FocusLayout, { trackRef: focusTrack }))), /* @__PURE__ */ React118.createElement(ControlBar, { controls: { chat: true, settings: !!SettingsComponent } })),\n    /* @__PURE__ */ React118.createElement(\n      Chat,\n      {\n        style: { display: widgetState.showChat ? \"grid\" : \"none\" },\n        messageFormatter: chatMessageFormatter,\n        messageEncoder: chatMessageEncoder,\n        messageDecoder: chatMessageDecoder\n      }\n    ),\n    SettingsComponent && /* @__PURE__ */ React118.createElement(\n      \"div\",\n      {\n        className: \"lk-settings-menu-modal\",\n        style: { display: widgetState.showSettings ? \"block\" : \"none\" }\n      },\n      /* @__PURE__ */ React118.createElement(SettingsComponent, null)\n    )\n  ), /* @__PURE__ */ React118.createElement(RoomAudioRenderer, null), /* @__PURE__ */ React118.createElement(ConnectionStateToast, null));\n}\n\n// src/prefabs/AudioConference.tsx\nimport * as React119 from \"react\";\nimport { Track as Track12 } from \"livekit-client\";\nfunction AudioConference(_a) {\n  var props = __objRest(_a, []);\n  const [widgetState, setWidgetState] = React119.useState({\n    showChat: false,\n    unreadMessages: 0\n  });\n  const audioTracks = useTracks([Track12.Source.Microphone]);\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */ React119.createElement(LayoutContextProvider, { onWidgetChange: setWidgetState }, /* @__PURE__ */ React119.createElement(\"div\", __spreadValues({ className: \"lk-audio-conference\" }, props), /* @__PURE__ */ React119.createElement(\"div\", { className: \"lk-audio-conference-stage\" }, /* @__PURE__ */ React119.createElement(TrackLoop, { tracks: audioTracks }, /* @__PURE__ */ React119.createElement(ParticipantAudioTile, null))), /* @__PURE__ */ React119.createElement(\n    ControlBar,\n    {\n      controls: { microphone: true, screenShare: false, camera: false, chat: true }\n    }\n  ), widgetState.showChat && /* @__PURE__ */ React119.createElement(Chat, null)));\n}\n\n// src/prefabs/VoiceAssistantControlBar.tsx\nimport { Track as Track13 } from \"livekit-client\";\nimport * as React120 from \"react\";\nfunction VoiceAssistantControlBar(_a) {\n  var _b = _a, {\n    controls,\n    saveUserChoices: saveUserChoices2 = true,\n    onDeviceError\n  } = _b, props = __objRest(_b, [\n    \"controls\",\n    \"saveUserChoices\",\n    \"onDeviceError\"\n  ]);\n  var _a2;\n  const visibleControls = __spreadValues({ leave: true, microphone: true }, controls);\n  const localPermissions = useLocalParticipantPermissions();\n  const { microphoneTrack, localParticipant } = useLocalParticipant();\n  const micTrackRef = React120.useMemo(() => {\n    return {\n      participant: localParticipant,\n      source: Track13.Source.Microphone,\n      publication: microphoneTrack\n    };\n  }, [localParticipant, microphoneTrack]);\n  if (!localPermissions) {\n    visibleControls.microphone = false;\n  } else {\n    (_a2 = visibleControls.microphone) != null ? _a2 : visibleControls.microphone = localPermissions.canPublish;\n  }\n  const htmlProps = mergeProps2({ className: \"lk-agent-control-bar\" }, props);\n  const { saveAudioInputEnabled, saveAudioInputDeviceId } = usePersistentUserChoices({\n    preventSave: !saveUserChoices2\n  });\n  const microphoneOnChange = React120.useCallback(\n    (enabled, isUserInitiated) => {\n      if (isUserInitiated) {\n        saveAudioInputEnabled(enabled);\n      }\n    },\n    [saveAudioInputEnabled]\n  );\n  return /* @__PURE__ */ React120.createElement(\"div\", __spreadValues({}, htmlProps), visibleControls.microphone && /* @__PURE__ */ React120.createElement(\"div\", { className: \"lk-button-group\" }, /* @__PURE__ */ React120.createElement(\n    TrackToggle,\n    {\n      source: Track13.Source.Microphone,\n      showIcon: true,\n      onChange: microphoneOnChange,\n      onDeviceError: (error) => onDeviceError == null ? void 0 : onDeviceError({ source: Track13.Source.Microphone, error })\n    },\n    /* @__PURE__ */ React120.createElement(BarVisualizer, { trackRef: micTrackRef, barCount: 7, options: { minHeight: 5 } })\n  ), /* @__PURE__ */ React120.createElement(\"div\", { className: \"lk-button-group-menu\" }, /* @__PURE__ */ React120.createElement(\n    MediaDeviceMenu,\n    {\n      kind: \"audioinput\",\n      onActiveDeviceChange: (_kind, deviceId) => saveAudioInputDeviceId(deviceId != null ? deviceId : \"\")\n    }\n  ))), visibleControls.leave && /* @__PURE__ */ React120.createElement(DisconnectButton, null, \"Disconnect\"), /* @__PURE__ */ React120.createElement(StartMediaButton, null));\n}\n\n// src/index.ts\nimport { setLogLevel, setLogExtension, isTrackReference as isTrackReference6 } from \"@livekit/components-core\";\nexport {\n  AudioConference,\n  AudioTrack,\n  AudioVisualizer,\n  BarVisualizer,\n  CameraDisabledIcon_default as CameraDisabledIcon,\n  CameraIcon_default as CameraIcon,\n  CarouselLayout,\n  Chat,\n  ChatCloseIcon_default as ChatCloseIcon,\n  ChatEntry,\n  ChatIcon_default as ChatIcon,\n  ChatToggle,\n  Chevron_default as Chevron,\n  ClearPinButton,\n  ConnectionQualityIndicator,\n  ConnectionState5 as ConnectionState,\n  ConnectionStateToast,\n  ControlBar,\n  DisconnectButton,\n  FocusLayout,\n  FocusLayoutContainer,\n  FocusToggle,\n  FocusToggleIcon_default as FocusToggleIcon,\n  GearIcon_default as GearIcon,\n  GridLayout,\n  LKFeatureContext,\n  LayoutContext,\n  LayoutContextProvider,\n  LeaveIcon_default as LeaveIcon,\n  LiveKitRoom,\n  LockLockedIcon_default as LockLockedIcon,\n  MediaDeviceMenu,\n  MediaDeviceSelect,\n  MicDisabledIcon_default as MicDisabledIcon,\n  MicIcon_default as MicIcon,\n  ParticipantAudioTile,\n  ParticipantContext,\n  ParticipantContextIfNeeded,\n  ParticipantLoop,\n  ParticipantName,\n  ParticipantPlaceholder_default as ParticipantPlaceholder,\n  ParticipantTile,\n  PreJoin,\n  QualityExcellentIcon_default as QualityExcellentIcon,\n  QualityGoodIcon_default as QualityGoodIcon,\n  QualityPoorIcon_default as QualityPoorIcon,\n  QualityUnknownIcon_default as QualityUnknownIcon,\n  RoomAudioRenderer,\n  RoomContext,\n  RoomName,\n  ScreenShareIcon_default as ScreenShareIcon,\n  ScreenShareStopIcon_default as ScreenShareStopIcon,\n  SpinnerIcon_default as SpinnerIcon,\n  StartAudio,\n  Toast,\n  TrackLoop,\n  TrackMutedIndicator,\n  TrackRefContext,\n  TrackRefContextIfNeeded,\n  TrackToggle,\n  UnfocusToggleIcon_default as UnfocusToggleIcon,\n  VideoConference,\n  VideoTrack,\n  VoiceAssistantContext,\n  VoiceAssistantControlBar,\n  formatChatMessageLinks,\n  isTrackReference6 as isTrackReference,\n  setLogExtension,\n  setLogLevel,\n  useAudioPlayback,\n  useAudioWaveform,\n  useChat,\n  useChatToggle,\n  useClearPinButton,\n  useConnectionQualityIndicator,\n  useConnectionState,\n  useCreateLayoutContext,\n  useDataChannel,\n  useDisconnectButton,\n  useEnsureCreateLayoutContext,\n  useEnsureLayoutContext,\n  useEnsureParticipant,\n  useEnsureRoom,\n  useEnsureTrackRef,\n  useFacingMode,\n  useFeatureContext,\n  useFocusToggle,\n  useGridLayout,\n  useIsEncrypted,\n  useIsMuted,\n  useIsRecording,\n  useIsSpeaking,\n  useLayoutContext,\n  useLiveKitRoom,\n  useLocalParticipant,\n  useLocalParticipantPermissions,\n  useMaybeLayoutContext,\n  useMaybeParticipantContext,\n  useMaybeRoomContext,\n  useMaybeTrackRefContext,\n  useMediaDeviceSelect,\n  useMediaDevices,\n  useMultibandTrackVolume,\n  usePagination,\n  useParticipantAttribute,\n  useParticipantAttributes,\n  useParticipantContext,\n  useParticipantInfo,\n  useParticipantPermissions,\n  useParticipantTile,\n  useParticipantTracks,\n  useParticipants,\n  usePersistentUserChoices,\n  usePinnedTracks,\n  usePreviewDevice,\n  usePreviewTracks,\n  useRemoteParticipant,\n  useRemoteParticipants,\n  useRoomContext,\n  useRoomInfo,\n  useSortedParticipants,\n  useSpeakingParticipants,\n  useStartAudio,\n  useStartVideo,\n  useSwipe,\n  useToken,\n  useTrackByName,\n  useTrackMutedIndicator,\n  useTrackRefContext,\n  useTrackToggle,\n  useTrackTranscription,\n  useTrackVolume,\n  useTracks,\n  useVisualStableUpdate,\n  useVoiceAssistant\n};\n//# sourceMappingURL=index.mjs.map"],"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","useObservableState","observable","startWith","resetWhenObservableChanges","state","setState","window","subscription","subscribe","unsubscribe","LayoutContext","useMaybeLayoutContext","TrackRefContext","useMaybeTrackRefContext","useEnsureTrackRef","trackRef","context","ref","Error","ParticipantContext","useMaybeParticipantContext","useEnsureParticipant","participant","_a","trackContext","p","RoomContext","useMaybeRoomContext","useEnsureRoom","room","r","LKFeatureContext","chain","callbacks","args","callback","e","console","error","mergeProps","result","i","length","props","charCodeAt","useIsMuted","sourceOrTrackRef","options","_b","isMuted","setIsMuted","publication","getTrackPublication","listener","defaultRoomProps","connect","audio","video","useLocalParticipant","localParticipant","setLocalParticipant","isMicrophoneEnabled","setIsMicrophoneEnabled","isCameraEnabled","setIsCameraEnabled","lastMicrophoneError","setLastMicrophoneError","lastCameraError","setLastCameraError","isScreenShareEnabled","setIsScreenShareEnabled","microphoneTrack","setMicrophoneTrack","cameraTrack","setCameraTrack","handleUpdate","media","useParticipantTile","onParticipantClick","disableSpeakingIndicator","htmlProps","trackReference","mergedProps","className","onClick","event","track","micTrack","Source","Microphone","micRef","isVideoMuted","isAudioMuted","isSpeaking","useIsSpeaking","facingMode","localTrack","useFacingMode","elementProps","isLocal","useRemoteParticipants","participants","setParticipants","additionalRoomEvents","updateOnlyOn","JSON","stringify","useParticipants","remoteParticipants","useTracks","sources","Camera","ScreenShare","ScreenShareAudio","Unknown","trackReferences","setTrackReferences","sources_","map","s","onlySubscribed","trackReferences2","participants2","debug","maybeTrackReferences","requirePlaceholder","placeholderMap","Map","sourcesThatNeedPlaceholder","filter","sourceWithOption","withPlaceholder","forEach","sourcesOfSubscribedTracks","getTrackPublications","pub","trackSource","placeholderNeededForThisParticipant","Array","from","setA","setB","_difference","Set","elem","delete","difference","set","identity","requiredPlaceholders","trackReferencesWithPlaceholders","has","get","placeholderSource","find","placeholder","push","CameraDisabledIcon_default","xmlns","width","height","fill","d","CameraIcon_default","FocusToggleIcon_default","stroke","strokeLinecap","strokeLinejoin","strokeWidth","LockLockedIcon_default","fillRule","clipRule","MicDisabledIcon_default","MicIcon_default","QualityExcellentIcon_default","QualityGoodIcon_default","opacity","QualityPoorIcon_default","QualityUnknownIcon_default","ScreenShareIcon_default","ScreenShareStopIcon_default","UnfocusToggleIcon_default","FocusToggle","trackRefFromContext","inFocus","layoutContext","pin","_c","_d","_e","dispatch","msg","useFocusToggle","Consumer","children","isProp","mergeProps2","cloneSingleChild","child","only","getSourceIcon","enabled","ConnectionQualityIndicator","quality","connectionQualityObserver","useConnectionQualityIndicator","Excellent","Good","Poor","getConnectionQualityIcon","ParticipantName","infoObserver","name","metadata","TrackMutedIndicator","_a2","show","mediaMutedObserver","useTrackMutedIndicator","showIndicator","ParticipantPlaceholder_default","viewBox","preserveAspectRatio","fillOpacity","useMediaTrackBySourceOrName","observerOptions","setPublication","setMuted","isSubscribed","setSubscribed","setTrack","orientation","setOrientation","previousElement","trackObserver","sid","trackSid","publication2","current","detach","element","kind","attach","dimensions","orientation_","VideoTrack","onTrackClick","onSubscriptionStatusChanged","manageSubscription","mediaEl","intersectionEntry","root","debouncedIntersectionEntry","isIntersecting","muted","evt","AudioTrack","volume","setVolume","warn","setEnabled","ParticipantContextIfNeeded","hasContext","Provider","TrackRefContextIfNeeded","ParticipantTile","_b2","isEncrypted","isE2EEEnabled","useIsEncrypted","autoManageSubscription","require2","ctx","useFeatureContext","autoSubscription","handleSubscribe","subscribed","style","position","marginRight","LiveKitRoom","token","serverUrl","passedRoom","connectOptions","screen","onConnected","onDisconnected","onError","onMediaDeviceFailure","onEncryptionError","simulateParticipants","rest","setRoom","onSignalConnected","localP","Promise","all","setMicrophoneEnabled","setCameraEnabled","setScreenShareEnabled","catch","handleMediaDeviceError","mediaDeviceFailure","getFailure","handleEncryptionError","on","SignalConnected","MediaDevicesError","EncryptionError","off","count","publish","useRealTracks","disconnect","connectionStateChangeListener","Disconnected","Connected","ConnectionStateChanged","info","useLiveKitRoom","featureFlags","ParticipantLoop","RoomAudioRenderer","tracks","Kind","Audio","display"],"sourceRoot":""}